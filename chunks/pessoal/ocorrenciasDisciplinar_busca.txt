# ocorrenciasDisciplinar_busca
Description: OcorrenciasDisciplinar
Method: busca (GET)
Method Description: Listagem de ocorrências disciplinares
Representation Type: OcorrenciaDisciplinar
Expressions:
- funcionario.numero:  (Type: Long)
- tipo:  (Type: )
- dataOcorrencia:  (Type: LocalDate)
- id: Id (Type: Long)
- funcionario.pessoa.nome:  (Type: String)
Types:
## TipoAto
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- classificacao: Classificação (Type: )
## Ato
- id: Identificador (Type: Long)
- numeroOficial: Número oficial (Type: String)
- dataCriacao: Data de criação (Type: LocalDate)
- dataVigorar: Data a vigorar (Type: LocalDate)
- tipo: Tipo do ato (Type: TipoAto)
## TipoCargoFuncionario
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- classificacao: Classificação (Type: )
## Cbo
- id: Id (Type: Long)
- codigoClassificacao: Código de classificação (Type: String)
- descricao: Descrição (Type: String)
- nivel: Tipo/Nível (Type: )
## CargoFuncionario
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- tipo: Tipo de cargo (Type: TipoCargoFuncionario)
- cbo: Cbo (Type: Cbo)
## PessoaFisicaAssociacaoRepresentation
- id: Id (Type: Long)
- nome: Nome (Type: String)
- cpf: CPF (Type: String)
- dataNascimento: Data de nascimento (Type: LocalDate)
## Funcionario
- id: Identificador (Type: Long)
- tipo: Tipo (Type: )
- inicioVigencia: Início da vigência (Type: LocalDateTime)
- dataInicioContrato: Data de início de contrato (Type: LocalDate)
- numero:  (Type: Long)
- contrato:  (Type: Integer)
- digitoVerificador:  (Type: Integer)
- cargo: Cargo (Type: CargoFuncionario)
- pessoa: Pessoa (Type: PessoaFisicaAssociacaoRepresentation)
## MotivoOcorrenciaDisciplinar
- id:  (Type: Long)
- descricao:  (Type: String)
## PessoaFisicaAfastamento
- id: Id (Type: Long)
- nome: Nome (Type: String)
- cpf: CPF (Type: String)
- dataNascimento: Data de nascimento (Type: LocalDate)
- sexo: Sexo (Type: )
## CodigoMatriculaFonteDadosMinhaFolha
- numero: Número (Type: Long)
- contrato: Contrato (Type: Integer)
- digitoVerificador: Digito verificador (Type: Integer)
## MatriculaAfastamento
- id: Id da matrícula (Type: Long)
- situacao: Situação (Type: )
- tipo: Tipo Matrícula (Type: )
- pessoa: Pessoa (Type: PessoaFisicaAfastamento)
- codigoMatricula: Codigo da matrícula (Type: CodigoMatriculaFonteDadosMinhaFolha)
## TipoAfastamentoAfastamento
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- classificacao: Classificação (Type: )
## AtoAfastamento
- id: Id (Type: Long)
- numeroOficial: Número oficial (Type: String)
## AtestadoAfastamento
- id: Id (Type: Long)
## AfastamentoOrigem
- id: Id (Type: Long)
- tipoAfastamento: Tipo do afastamento (Type: TipoAfastamentoAfastamento)
- inicioAfastamento: Início afastamento (Type: LocalDate)
- fimAfastamento: Fim afastamento (Type: LocalDate)
## SindicatoFuncionario
- tipo: Tipo (Type: )
- mesContribuicao: Mês contribuição (Type: )
- numero: Número (Type: String)
- diasAviso: Dias de aviso (Type: Integer)
- dataBase: Data base (Type: MonthDay)
## PessoaJuridica
- id: Id (Type: Long)
- tipo: Tipo (Type: )
- razaoSocial: Razão social (Type: String)
- nomeFantasia: Nome fantasia (Type: String)
- cnpj: CNPJ (Type: String)
- codigoInstFinanceira: Código Inst. Financeira (Type: String)
- sindicato: Sindicato (Type: SindicatoFuncionario)
## AfastamentoFonteDados
- id: Id (Type: Long)
- matricula: Matrícula (Type: MatriculaAfastamento)
- tipoAfastamento: Tipo do afastamento (Type: TipoAfastamentoAfastamento)
- ato: Ato (Type: AtoAfastamento)
- inicioAfastamento: Início do afastamento (Type: LocalDate)
- fimAfastamento: Fim do afastamento (Type: LocalDate)
- retornoTrabalho: Data de retorno ao trabalho (Type: LocalDate)
- quantidade: Quantidade (Type: BigDecimal)
- unidade: Unidade (Type: )
- quantidadeDias: Quantidade de dias (Type: BigDecimal)
- jornadaDiaria: Jornada diária (Type: BigDecimal)
- decorrente: Decorrente (Type: )
- atestados: Atestados (Type: AtestadoAfastamento)
- acidenteTransito: Acidente de trânsito (Type: )
- retificacao: Retificação (Type: Boolean)
- dataRetificacao: Data de retificação (Type: YearMonth)
- origemRetificacao: Origem da retificação (Type: )
- tipoProcessoRetificacao: Tipo de processo da retificação (Type: )
- numeroProcesso: Número do processo (Type: String)
- remuneracaoCargoEfetivo: Remuneração do cargo efetivo (Type: Boolean)
- observacao: Observação (Type: String)
- motivo: Motivo (Type: String)
- descontar: Descontar (Type: Boolean)
- competenciaDesconto: Competência de desconto (Type: YearMonth)
- abonar: Abonar (Type: Boolean)
- competenciaAbono: Competência de abono (Type: YearMonth)
- quantidadeAbono: Quantidade de abono (Type: BigDecimal)
- afastamentoOrigem: Afastamento de origem (Type: AfastamentoOrigem)
- orgaoDestino: Órgão destino (Type: PessoaJuridica)
- tipoOnus: Tipo de ônus (Type: )
- atoCessao: Ato de cessão (Type: AtoAfastamento)
- atoRetorno: Ato de retorno (Type: AtoAfastamento)
- indicativoCessao: Indicativo de cessão (Type: )
- codigoUnidadeGestoraDestino: Código da unidade gestora de destino (Type: String)
## FotoPessoaFisica
- name: Nome do arquivo (Type: String)
- description: Descrição do arquivo (Type: String)
- type: Tipo de arquivo (Type: String)
- size: Tamanho de arquivo (Type: Long)
- expirationDate: Data de expiração do arquivo (Type: LocalDateTime)
- url: URL para baixar o arquivo (Type: String)
## PessoaFisica
- id: Identificador (Type: Long)
- nome: Nome (Type: String)
- cpf: CPF (Type: String)
- dataNascimento: Data de Nascimento (Type: LocalDate)
- sexo: Sexo (Type: )
- grauInstrucao: Grau de escolaridade (Type: )
- foto:  (Type: FotoPessoaFisica)
- incapaz:  (Type: Boolean)
- atingiuMaioridade:  (Type: Boolean)
## OcorrenciaDisciplinar
- id: Id (Type: Long)
- dataOcorrencia:  (Type: LocalDate)
- tipo:  (Type: )
- ato:  (Type: Ato)
- funcionario:  (Type: Funcionario)
- motivo:  (Type: MotivoOcorrenciaDisciplinar)
- responsavel:  (Type: Funcionario)
- afastamento:  (Type: AfastamentoFonteDados)
- testemunhas:  (Type: PessoaFisica)
Code Example:
```
fonteOcorrenciasDisciplinar = Dados.pessoal.v2.ocorrenciasDisciplinar;

filtroOcorrenciasDisciplinar = "tipo = ELOGIO"

dadosOcorrenciasDisciplinar = fonteOcorrenciasDisciplinar.busca(criterio: filtroOcorrenciasDisciplinar,campos: "ato(tipo(id, descricao, classificacao), id, numeroOficial, dataCriacao, dataVigorar), funcionario(numero), motivo(id, descricao), id, dataOcorrencia, tipo",ordenacao: "funcionario.numero asc")

percorrer (dadosOcorrenciasDisciplinar) { itemOcorrenciasDisciplinar ->

}
```