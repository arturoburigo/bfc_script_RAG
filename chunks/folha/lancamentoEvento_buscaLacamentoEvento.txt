# lancamentoEvento_buscaLacamentoEvento
Description: Lançamento de evento
Method: buscaLacamentoEvento (GET)
Method Description: Listagem de lançamento de eventos
Representation Type: LancamentoEventoFonteDados
Expressions:
- subTipoProcessamento: Subtipo de processamento (Type: )
- configuracao.descricao: Descrição da configuração de evento (Type: String)
- matricula.organograma.descricao: Descrição do organograma (Type: String)
- matricula.organograma.id: Id do organograma (Type: Long)
- valor: Valor (Type: BigDecimal)
- configuracao.codigo: Código da configuração de evento (Type: Long)
- matricula.organograma.numero: Numero do organograma (Type: String)
- matricula.codigoMatricula.numero: Número da matrícula (Type: Long)
- matricula.pessoa.nome: Nome da pessoa da matrícula (Type: String)
- tipoProcessamento: Tipo de processamento (Type: )
- dataInicial: Data inicial (Type: LocalDate)
- id: Identificador (Type: Long)
- matricula.id: Identificador da matrícula (Type: Long)
- dataFinal: Data final (Type: LocalDate)
Types:
## CodigoMatriculaLancamentoEvento
- numero: Número (Type: Long)
- contrato: Contrato (Type: Integer)
- digitoVerificador: Digito verificador (Type: Integer)
## PessoaFisicaLancamentoEvento
- id: Identificador (Type: Long)
- nome: Nome (Type: String)
- cpf: CPF (Type: String)
## ConfiguracaoNivelOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- nivelSecretaria: Nível secretaria? (Type: Boolean)
- nivel: Nível da secretaria (Type: Integer)
- quantidadeDigitos: Quantidade de dígitos (Type: Integer)
- separador: Separador de nível (Type: )
## ConfiguracaoOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- emUso: Configuração está em uso? (Type: Boolean)
- niveis: Níveis (Type: ConfiguracaoNivelOrganograma)
## TipoAdministracao
- id: Id (Type: Long)
- tipo: Tipo (Type: )
- naturezaJuridica: Natureza Jurídica (Type: )
- descricao: Descrição (Type: String)
- subteto: Valor do Subteto (Type: BigDecimal)
## TipoLogradouroOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- abreviatura: Abreviatura (Type: String)
## LogradouroOrganograma
- id: Id (Type: Long)
- tipoLogradouro: Tipo (Type: TipoLogradouroOrganograma)
- descricao: Descrição (Type: String)
## EstadoPessoaFisica
- id: Id (Type: Long)
- uf: UF (Type: String)
- nome: Nome (Type: String)
- pais: País (Type: String)
## MunicipioPessoaFisica
- id: Id (Type: Long)
- nome: Nome (Type: String)
- estado: Estado (Type: EstadoPessoaFisica)
## BairroOrganograma
- id: Id (Type: Long)
- nome: Nome (Type: String)
- municipio: Município (Type: MunicipioPessoaFisica)
## Endereco
- id: Id (Type: Long)
- logradouro: Logradouro (Type: LogradouroOrganograma)
- bairro: Bairro (Type: BairroOrganograma)
- cep: CEP (Type: String)
- numero: Número (Type: String)
- complemento: Complemento (Type: String)
- descricao: Complemento (Type: String)
## CargoOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- codigoESocial: Código ESocial (Type: String)
- tipo: Tipo (Type: TipoCargo)
## FuncaoOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
## AtoOrganograma
- id: Id (Type: Long)
- tipo: Tipo de ato (Type: TipoAto)
- numeroOficial: Número oficial (Type: String)
## OrganogramaResponsavelFonteDados
- id: Id (Type: Long)
- dataInicio: Data de início da responsabilidade (Type: LocalDate)
- dataTermino: Data de término da responsabilidade (Type: LocalDate)
- substituto: É substituto? (Type: Boolean)
- cargo: Cargo (Type: CargoOrganograma)
- funcaoGratificada: Função gratificada (Type: FuncaoOrganograma)
- ato: Ato da responsabilidade (Type: AtoOrganograma)
- tipoMatricula: Tipo da matrícula (Type: )
- nome: Nome do responsável (Type: String)
- idPessoa: Id da pessoa do responsável (Type: Long)
- cpf: CPF do responsável (Type: String)
## OrganogramaFonteDados
- id: Id (Type: Long)
- configuracao: Configuração de organograma (Type: ConfiguracaoOrganograma)
- descricao: Descrição (Type: String)
- numero: Número (Type: String)
- sigla: Sigla (Type: String)
- nivel: Nível (Type: Integer)
- tipoAdministracao: Tipo de Administração (Type: TipoAdministracao)
- endereco: Endereço (Type: Endereco)
- responsavel: Responsável vigente (Type: OrganogramaResponsavelFonteDados)
## MatriculaLancamentoEvento
- id: Identificador (Type: Long)
- codigoMatricula: Código da matrícula (Type: CodigoMatriculaLancamentoEvento)
- tipo: Tipo (Type: )
- pessoa: Pessoa (Type: PessoaFisicaLancamentoEvento)
- organograma: Organograma (Type: OrganogramaFonteDados)
## ConfiguracaoEventoLancamentoEvento
- id: Identificador (Type: Long)
- codigo: Código (Type: Long)
- descricao: Descrição (Type: String)
- unidade: Unidade (Type: )
- tipo: Tipo (Type: )
- desabilitado: Desabilitado (Type: Boolean)
- observacao: Observações (Type: String)
## LancamentoEventoFonteDados
- id: Identificador (Type: Long)
- tipoProcessamento: Tipo de processamento (Type: )
- subTipoProcessamento: Subtipo de processamento (Type: )
- dataInicial: Data inicial (Type: LocalDate)
- matricula: Matrícula (Type: MatriculaLancamentoEvento)
- truncarValor: Truncar valor (Type: Boolean)
- dataFinal: Data final (Type: LocalDate)
- configuracao: Configuração de evento (Type: ConfiguracaoEventoLancamentoEvento)
- valor: Valor (Type: BigDecimal)
- observacao: Observação (Type: String)
## LancamentoEventoDto
- competenciaInicial: Competência inicial (Type: YearMonth)
- competenciaFinal: Competência final (Type: YearMonth)
- codigoMatricula: Código da matrícula (Type: Long)
- codigoEvento: Código do evento (Type: Long)
- valor: Valor do lançamento (Type: BigDecimal)
- tipoProcessamento: Tipo de processamento (Type: )
- subTipoProcessamento: Subtipo de processamento (Type: )
- observacao: Texto de observação (Type: String)
- numeroContrato: Número do Contrato da matrícula (Type: Integer)
Code Example:
```
fonteLancamentoEvento = Dados.folha.v2.lancamentoEvento;

filtroLancamentoEvento = "matricula.pessoa.nome = John doe"

dadosLancamentoEvento = fonteLancamentoEvento.buscaLacamentoEvento(criterio: filtroLancamentoEvento,campos: "id, configuracao(codigo, id), matricula(id, codigoMatricula(numero, contrato, digitoVerificador), pessoa(nome)), valor, dataFinal, dataInicial",ordenacao: "matricula.id asc")

percorrer (dadosLancamentoEvento) { itemLancamentoEvento ->

}
```