{
  "content": "groovy\nfonteCargo = Dados.folha.v2.cargo;\n\nfiltroCargo = \"id = null and inicioVigencia = null\"\n\ndadosCargo = fonteCargo.buscaTodos(criterio: filtroCargo,campos: \"id, extinto, ato(id, dataCriacao, dataVigorar)\",ordenacao: \"id asc\")\n\npercorrer (dadosCargo) { itemCargo ->\n\n}",
  "metadata": {
    "chunk_id": "cargo_buscaTodos_6_d5626417",
    "section_name": "cargo_buscaTodos",
    "chunk_index": 6,
    "total_chunks": 7,
    "parent_section": null,
    "chunk_type": "code_example",
    "semantic_type": "example",
    "contains_code": false,
    "code_language": null,
    "token_count": 90,
    "char_count": 272,
    "overlap_with_previous": 22,
    "overlap_with_next": 0,
    "keywords": [
      "busca",
      "cargo",
      "filtro",
      "ordenacao",
      "folha",
      "v2",
      "campo",
      "dados"
    ],
    "entities": [
      "ClasseReferenciaFonteDados",
      "TipoCargo",
      "Organograma",
      "AtoFonteDados",
      "VinculoEmpregaticioCategoriaTrabalhadorFonteDados",
      "AtoMatriculaAssociacao",
      "CargoOrganograma",
      "NaturezaTextoJuridico",
      "TipoAto",
      "ConfiguracaoLicencaPremio",
      "CargoAreaAtuacao",
      "buscarTodos",
      "cargo",
      "CargoCompletoFonteDados",
      "ConfiguracaoLicencaPremioFonteDados",
      "TipoCargoFonteDados",
      "Funcao",
      "TipoAfastamentoFonteDados",
      "CargoDadosRepresentation",
      "CargoSimples",
      "CargoRemuneracaoFonteDados",
      "Cbo",
      "TipoMovimentacaoPessoalTipoAfastamento",
      "AreaAtuacao",
      "Curso",
      "PlanoPrevidenciaFonteDados",
      "QuadroCargo",
      "TipoDiariaFonteDados",
      "PlanoPrevidencia",
      "VinculoEmpregaticioMotivoRescisaoFonteDados",
      "NivelSalarialAssociacao",
      "TipoMovimentacaoPessoalTipoCargo",
      "CargoVinculoEmpregaticioFonteDados",
      "ConfiguracaoFerias",
      "Dados.folha.v2.cargo",
      "CargoOrigem",
      "VinculoEmpregaticioFonteDados"
    ],
    "hierarchy_level": 0,
    "timestamp": "2025-06-03T23:15:04.156861",
    "source_file": "folha.json",
    "domain": "folha",
    "hash": "d56264177110bd00877028d094d95dda",
    "related_chunks": [
      "remuneracoes_buscaEventosDeFolhas_0_b776712c",
      "remuneracoes_buscaComEventosResumidos_3_dbad4770",
      "remuneracoes_busca_3_50779bfc",
      "remuneracoes_buscaComEventos_8_6afef83d",
      "calculoFolha_buscaCalculoRescisao_6_6473e96c"
    ],
    "quality_score": 0.6000000000000001
  },
  "embeddings_text": "Section: cargo_buscaTodos\nType: example\nRelated to: ClasseReferenciaFonteDados, TipoCargo, Organograma\n\ngroovy\nfonteCargo = Dados.folha.v2.cargo;\n\nfiltroCargo = \"id = null and inicioVigencia = null\"\n\ndadosCargo = fonteCargo.buscaTodos(criterio: filtroCargo,campos: \"id, extinto, ato(id, dataCriacao, dataVigorar)\",ordenacao: \"id asc\")\n\npercorrer (dadosCargo) { itemCargo ->\n\n}\n\nKeywords: busca, cargo, filtro, ordenacao, folha, v2, campo, dados",
  "search_text": "cargo_buscaTodos ClasseReferenciaFonteDados TipoCargo Organograma AtoFonteDados VinculoEmpregaticioCategoriaTrabalhadorFonteDados AtoMatriculaAssociacao CargoOrganograma NaturezaTextoJuridico TipoAto ConfiguracaoLicencaPremio CargoAreaAtuacao buscarTodos cargo CargoCompletoFonteDados ConfiguracaoLicencaPremioFonteDados TipoCargoFonteDados Funcao TipoAfastamentoFonteDados CargoDadosRepresentation CargoSimples CargoRemuneracaoFonteDados Cbo TipoMovimentacaoPessoalTipoAfastamento AreaAtuacao Curso PlanoPrevidenciaFonteDados QuadroCargo TipoDiariaFonteDados PlanoPrevidencia VinculoEmpregaticioMotivoRescisaoFonteDados NivelSalarialAssociacao TipoMovimentacaoPessoalTipoCargo CargoVinculoEmpregaticioFonteDados ConfiguracaoFerias Dados.folha.v2.cargo CargoOrigem VinculoEmpregaticioFonteDados busca cargo filtro ordenacao folha v2 campo dados groovy\nfonteCargo = Dados.folha.v2.cargo;\n\nfiltroCargo = \"id = null and inicioVigencia = null\"\n\ndadosCargo = fonteCargo.buscaTodos(criterio: filtroCargo,campos: \"id, extinto, ato(id, dataCriacao, dataVigorar)\",ordenacao: \"id asc\")\n\npercorrer (dadosCargo) { itemCargo ->\n\n}"
}