# cargo_buscaTodos
Description: cargo
Method: buscarTodos (GET)
Method Description: Buscar todos os registros.
Representation Type: CargoCompletoFonteDados
Expressions:
- inicioVigencia: Inicio da vigência (Type: LocalDateTime)
- origem.id: Origem Cargo (Type: Long)
- id: Id (Type: Long)
- extinto: Extinto? (Type: Boolean)
- descricao: Descrição (Type: String)
Types:
## CargoSimples
- id:  (Type: Long)
- descricao:  (Type: String)
- vagasOcupadas:  (Type: Long)
## TipoAto
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- classificacao: Classificação (Type: )
## NaturezaTextoJuridico
- id: id (Type: Long)
- descricao: Descrição (Type: String)
## AtoFonteDados
- id: Id (Type: Long)
- numeroOficial: Número oficial (Type: String)
- tipo: Tipo (Type: TipoAto)
- ementa: Ementa (Type: String)
- naturezaTextoJuridico: Natureza do texto jurídico (Type: NaturezaTextoJuridico)
- dataCriacao: Data de criação (Type: LocalDate)
- dataVigorar: Data a vigorar (Type: LocalDate)
- dataPublicacao: Data de publicação (Type: LocalDate)
- dataResolucao: Data de resolução (Type: LocalDate)
- numeroDiarioOficial: Número do diário oficial (Type: Long)
## TipoMovimentacaoPessoalTipoCargo
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- classificacao: Classificação (Type: )
## TipoCargoFonteDados
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- classificacao: Classificação (Type: )
- tipoMovimentacao: Tipo movimentação (Type: TipoMovimentacaoPessoalTipoCargo)
- tipoMovimentacaoSaida: Tipo movimentação de saída (Type: TipoMovimentacaoPessoalTipoCargo)
- tipoMovimentacaoSubstituto: Tipo movimentação do substituto (Type: TipoMovimentacaoPessoalTipoCargo)
- tipoMovimentacaoSaidaSubstituto: Tipo movimentação de saída do substituto (Type: TipoMovimentacaoPessoalTipoCargo)
## Cbo
- id:  (Type: Long)
- descricao: Descrição (Type: String)
- codigoClassificacao: Código de classificação (Type: String)
## AtoMatriculaAssociacao
- id: Id (Type: Long)
- numeroOficial: Número oficial (Type: String)
- tipo: Tipo de ato (Type: TipoAto)
- ementa: Ementa (Type: String)
## QuadroCargo
- id:  (Type: Long)
- descricao:  (Type: String)
- inicioVigencia:  (Type: LocalDateTime)
- percentualMinimo:  (Type: Integer)
- atoCriacao:  (Type: AtoMatriculaAssociacao)
- atoPercentualMinimo:  (Type: AtoMatriculaAssociacao)
- extinto:  (Type: Boolean)
- campoAdicional:  (Type: CampoAdicionalDto)
## TipoMovimentacaoPessoalTipoAfastamento
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- classificacao: Classificação (Type: )
## TipoAfastamentoFonteDados
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- classificacao: Classificação (Type: )
- tipoMovimentacaoPessoal: Tipo de movimentação pessoal (Type: TipoMovimentacaoPessoalTipoAfastamento)
- diasPrevistos: Dias previstos (Type: Integer)
- consideraVencimento: Considera vencimentos? (Type: Boolean)
- perdeTempoServico: Perde tempo de serviço? (Type: Boolean)
- reduz13Salario: Reduz 13º salário? (Type: Boolean)
- reduzFerias: Reduz férias? (Type: Boolean)
- reduzFgts: Reduz FGTS? (Type: Boolean)
## ConfiguracaoLicencaPremioFonteDados
- id:  (Type: Long)
- descricao: Descrição (Type: String)
- lancarLicencaAfastamento: Lançar licença premio afastamento? (Type: Boolean)
- tipoAfastamento: Tipo afastamento (Type: TipoAfastamentoFonteDados)
## ConfiguracaoFerias
- id:  (Type: Long)
- descricao:  (Type: String)
## PlanoPrevidenciaFonteDados
- id:  (Type: Long)
- descricao: Descrição (Type: String)
- tipo: Tipo (Type: )
## VinculoEmpregaticioCategoriaTrabalhadorFonteDados
- id: Id (Type: Long)
- descricao: descricao (Type: String)
- grupoTrabalhador: Grupo de trabalhador (Type: )
- codigoESocial: Código do eSocial (Type: String)
## VinculoEmpregaticioMotivoRescisaoFonteDados
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- tipo: Tipo (Type: )
- classificacao: Classificação (Type: )
## VinculoEmpregaticioFonteDados
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- tipo: Tipo do regime trabalhista (Type: )
- descricaoRegimePrevidenciario: Regime previdenciário (Type: String)
- codigoSefip: Código da SEFIF (Type: String)
- geraRais: Gera RAIS? (Type: Boolean)
- codigoRais: Código da RAIS (Type: String)
- descricaoRais: Código da RAIS (Type: String)
- vinculoTemporario: Vínculo temporário? (Type: Boolean)
- dataFinalObrigatoria: Data final obrigatória (Type: Boolean)
- geraCaged: Gera CAGED? (Type: Boolean)
- geraLicencaPremio: Gera liçenca-prêmio? (Type: Boolean)
- categoriaTrabalhador: Categoria do trabalhador (Type: VinculoEmpregaticioCategoriaTrabalhadorFonteDados)
- motivoRescisao: Motivo de rescisão (Type: VinculoEmpregaticioMotivoRescisaoFonteDados)
## CargoVinculoEmpregaticioFonteDados
- id: Identificador (Type: Long)
- vinculoEmpregaticio: Vinculo empregatício (Type: VinculoEmpregaticioFonteDados)
- ato: Ato (Type: AtoFonteDados)
## CargoOrigem
- id: Id (Type: Long)
## Organograma
- id:  (Type: Long)
- descricao:  (Type: String)
- numero:  (Type: String)
- numeroMascarado:  (Type: String)
## CargoOrganograma
- id: Identificador (Type: Long)
- organograma: Identificador do organograma (Type: Organograma)
- quantidadeVagas: Quantidade de vagas (Type: Long)
- quantidadeVagasOcupadas: Quantidade de vagas ocupadas (Type: Long)
## AreaAtuacao
- id:  (Type: Long)
- descricao:  (Type: String)
## CargoAreaAtuacao
- id: Identificador (Type: Long)
- quantidadeVagas: Quantidade de vagas (Type: Long)
- quantidadeVagasOcupadas: Quantidade de vagas ocupadas (Type: Long)
- areaAtuacao: Identificador da área de atuação (Type: AreaAtuacao)
## TipoDiariaFonteDados
- id:  (Type: Long)
- descricao: Descrição (Type: String)
- valorUnitario: Valor unitário (Type: BigDecimal)
- ato: Ato (Type: AtoFonteDados)
- inicioVigencia: Inicio vigência (Type: LocalDateTime)
## ClasseReferenciaFonteDados
- id: Identificador (Type: Long)
- ordem: Ordem (Type: Integer)
- classe: Classe (Type: String)
- referencia: Referência (Type: String)
- classeTce: Classe TCE (Type: String)
- referenciaTce: Referência TCE (Type: String)
- valor:  (Type: BigDecimal)
## NivelSalarialAssociacao
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- valor: Valor (Type: BigDecimal)
## CargoRemuneracaoFonteDados
- id: Identificador (Type: Long)
- classeReferenciaInicial: Identificador da classe referência inicial (Type: ClasseReferenciaFonteDados)
- classeReferenciaFinal: Identificador da classe referência final (Type: ClasseReferenciaFonteDados)
- nivelSalarial: Identificador do nível salarial (Type: NivelSalarialAssociacao)
## Funcao
- id:  (Type: Long)
- descricao:  (Type: String)
## Curso
- id:  (Type: Long)
- descricao:  (Type: String)
- tipoCurso:  (Type: )
- cargaHoraria:  (Type: BigDecimal)
- frequenciaMinima:  (Type: BigDecimal)
- instituicaoEnsino:  (Type: PessoaJuridica)
## CargoCompletoFonteDados
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- codigoESocial: Codigo eSocial (Type: String)
- unidadePagamento: Unidade de pagamento (Type: )
- inicioVigencia: Inicio da vigência (Type: LocalDateTime)
- ato: Ato (Type: AtoFonteDados)
- tipo: Tipo do cargo (Type: TipoCargoFonteDados)
- cbo: Cbo (Type: Cbo)
- pagaDecimoTerceiroSalario: Se paga décimo terceiro salário (Type: Boolean)
- grauInstrucao: Grau de instrução (Type: )
- situacaoGrauInstrucao: Situação do grau de instrução (Type: )
- contagemEspecial: Contagem especial? (Type: )
- acumuloCargos: Acumulo de cargos? (Type: )
- dedicacaoExclusiva: Dedicação exclusiva? (Type: Boolean)
- quadroCargos: Quadro de cargos (Type: QuadroCargo)
- configuracaoLicencaPremio: Configuração licença premio (Type: ConfiguracaoLicencaPremioFonteDados)
- configuracaoFerias: Configuração férias (Type: ConfiguracaoFerias)
- planosPrevidencia: Planos previdência (Type: PlanoPrevidenciaFonteDados)
- vinculosEmpregaticios: Vinculo empregatício (Type: CargoVinculoEmpregaticioFonteDados)
- quantidadeVagas: Quantidade de vagas (Type: Long)
- quantidadeVagasPcd: Quantidade de vagas para pessoas com deficiência (Type: Long)
- origem: Identificador do cargo de origem (Type: CargoOrigem)
- quantidadeVagasOcupadas: Quantidade de vagas ocupadas (Type: Long)
- organogramas: Organogramas (Type: CargoOrganograma)
- areasAtuacao: Áreas de atuação (Type: CargoAreaAtuacao)
- tiposDiaria: Tipo de diária (Type: TipoDiariaFonteDados)
- remuneracoes: Remunerações (Type: CargoRemuneracaoFonteDados)
- requisitosNecessarios: Requisitos necessários (Type: String)
- atividadesDesempenhadas: Atividades desempenhadas (Type: String)
- extinto: Extinto? (Type: Boolean)
- possuiMensagens: Possui mensagens? (Type: Boolean)
- funcao: Função (Type: Funcao)
- camposAdicionais: Campos Adicionais (Type: CamposAdicionais)
- cursos: Cursos (Type: Curso)
## TipoCargo
- id: Identificador (Type: Long)
## PlanoPrevidencia
- id:  (Type: Long)
- descricao:  (Type: String)
- tipo:  (Type: )
## ConfiguracaoLicencaPremio
- id:  (Type: Long)
- descricao:  (Type: String)
- lancarLicencaAfastamento:  (Type: Boolean)
## CargoDadosRepresentation
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- grauInstrucao: Grau de instrução (Type: )
- pagaDecimoTerceiroSalario: Pagamento de decimo terceiro salário (Type: Boolean)
- contagemEspecial: Contagem especial (Type: )
- quantidadeVagas: Quantidade de vagas (Type: Long)
- quantidadeVagasPcd: Quantidade de vagas PCD (Type: Long)
- inicioVigencia: Inicio de vigência (Type: LocalDateTime)
- acumuloCargos: Acumulo de cargos (Type: )
- dedicacaoExclusiva: Dedicação exclusiva (Type: Boolean)
- origem: Identificador do cargo de origem (Type: CargoOrigem)
- quadroCargos: Quadro de cargos (Type: QuadroCargo)
- tipo: Tipo de cargo (Type: TipoCargo)
- cbo: Cbo (Type: Cbo)
- planosPrevidencia: Planos de previdencia do cargo (Type: PlanoPrevidencia)
- configuracaoLicencaPremio: Configuração da licença prêmio (Type: ConfiguracaoLicencaPremio)
- areasAtuacao: Areas de atuação(completa) (Type: CargoAreaAtuacao)
- funcao: Função Gratificada (Type: Funcao)
- camposAdicionais: Campos Adicionais (Type: CamposAdicionais)
Code Example:
```
fonteCargo = Dados.folha.v2.cargo;

filtroCargo = "id = null and inicioVigencia = null"

dadosCargo = fonteCargo.buscaTodos(criterio: filtroCargo,campos: "id, extinto, ato(id, dataCriacao, dataVigorar)",ordenacao: "id asc")

percorrer (dadosCargo) { itemCargo ->

}
```