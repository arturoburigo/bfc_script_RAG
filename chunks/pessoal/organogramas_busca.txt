# organogramas_busca
Description: Organogramas
Method: busca (GET)
Method Description: Listagem de organogramas
Representation Type: OrganogramaFonteDados
Expressions:
- sigla: Sigla (Type: String)
- numero: Número (Type: String)
- id: Id (Type: Long)
- nivel: Nível (Type: Integer)
- configuracao.emUso: Configuração está em uso? (Type: Boolean)
- descricao: Descrição (Type: String)
Types:
## ConfiguracaoNivelOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- nivelSecretaria: Nível secretaria? (Type: Boolean)
- nivel: Nível da secretaria (Type: Integer)
- quantidadeDigitos: Quantidade de dígitos (Type: Integer)
- separador: Separador de nível (Type: )
## ConfiguracaoOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- emUso: Configuração está em uso? (Type: Boolean)
- niveis: Níveis (Type: ConfiguracaoNivelOrganograma)
## TipoAdministracao
- id: Id (Type: Long)
- tipo: Tipo (Type: )
- naturezaJuridica: Natureza Jurídica (Type: )
- descricao: Descrição (Type: String)
- subteto: Valor do Subteto (Type: BigDecimal)
## TipoLogradouroOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- abreviatura: Abreviatura (Type: String)
## LogradouroOrganograma
- id: Id (Type: Long)
- tipoLogradouro: Tipo (Type: TipoLogradouroOrganograma)
- descricao: Descrição (Type: String)
## EstadoPessoaFisica
- id: Id (Type: Long)
- uf: UF (Type: String)
- nome: Nome (Type: String)
- pais: País (Type: String)
## MunicipioPessoaFisica
- id: Id (Type: Long)
- nome: Nome (Type: String)
- estado: Estado (Type: EstadoPessoaFisica)
## BairroOrganograma
- id: Id (Type: Long)
- nome: Nome (Type: String)
- municipio: Município (Type: MunicipioPessoaFisica)
## Endereco
- id: Id (Type: Long)
- logradouro: Logradouro (Type: LogradouroOrganograma)
- bairro: Bairro (Type: BairroOrganograma)
- cep: CEP (Type: String)
- numero: Número (Type: String)
- complemento: Complemento (Type: String)
- descricao: Complemento (Type: String)
## CargoOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
- codigoESocial: Código ESocial (Type: String)
- tipo: Tipo (Type: TipoCargo)
## FuncaoOrganograma
- id: Id (Type: Long)
- descricao: Descrição (Type: String)
## AtoOrganograma
- id: Id (Type: Long)
- tipo: Tipo de ato (Type: TipoAto)
- numeroOficial: Número oficial (Type: String)
## OrganogramaResponsavelFonteDados
- id: Id (Type: Long)
- dataInicio: Data de início da responsabilidade (Type: LocalDate)
- dataTermino: Data de término da responsabilidade (Type: LocalDate)
- substituto: É substituto? (Type: Boolean)
- cargo: Cargo (Type: CargoOrganograma)
- funcaoGratificada: Função gratificada (Type: FuncaoOrganograma)
- ato: Ato da responsabilidade (Type: AtoOrganograma)
- tipoMatricula: Tipo da matrícula (Type: )
- nome: Nome do responsável (Type: String)
- idPessoa: Id da pessoa do responsável (Type: Long)
- cpf: CPF do responsável (Type: String)
## OrganogramaFonteDados
- id: Id (Type: Long)
- configuracao: Configuração de organograma (Type: ConfiguracaoOrganograma)
- descricao: Descrição (Type: String)
- numero: Número (Type: String)
- sigla: Sigla (Type: String)
- nivel: Nível (Type: Integer)
- tipoAdministracao: Tipo de Administração (Type: TipoAdministracao)
- endereco: Endereço (Type: Endereco)
- responsavel: Responsável vigente (Type: OrganogramaResponsavelFonteDados)
- camposAdicionais:  (Type: CamposAdicionais)
Code Example:
```
fonteOrganogramas = Dados.pessoal.v2.organogramas;

dadosOrganogramas = fonteOrganogramas.busca(campos: "id, descricao")

percorrer (dadosOrganogramas) { itemOrganogramas ->

}
```