{
  "content": "groovy\nfonteCargo = Dados.pessoal.v2.cargo;\n\ndadosCargo = fonteCargo.busca(campos: \"planosPrevidencia(id, descricao, tipo), configuracaoLicencaPremio(id, descricao, lancarLicencaAfastamento), id, descricao, quantidadeVagas, grauInstrucao, inicioVigencia\",ordenacao: \"id asc\")\n\npercorrer (dadosCargo) { itemCargo ->\n\n}",
  "metadata": {
    "chunk_id": "cargo_buscaTodos_6_3d689e3c",
    "section_name": "cargo_buscaTodos",
    "chunk_index": 6,
    "total_chunks": 7,
    "parent_section": null,
    "chunk_type": "code_example",
    "semantic_type": "example",
    "contains_code": false,
    "code_language": null,
    "token_count": 99,
    "char_count": 317,
    "overlap_with_previous": 37,
    "overlap_with_next": 0,
    "keywords": [
      "pessoal",
      "busca",
      "tipo",
      "ordenacao",
      "v2",
      "cargo",
      "campo",
      "dados"
    ],
    "entities": [
      "ClasseReferenciaFonteDados",
      "TipoCargo",
      "Organograma",
      "Dados.pessoal.v2.cargo",
      "AtoFonteDados",
      "VinculoEmpregaticioCategoriaTrabalhadorFonteDados",
      "AtoMatriculaAssociacao",
      "CargoOrganograma",
      "NaturezaTextoJuridico",
      "TipoAto",
      "ConfiguracaoLicencaPremio",
      "CargoAreaAtuacao",
      "buscarTodos",
      "cargo",
      "CargoCompletoFonteDados",
      "ConfiguracaoLicencaPremioFonteDados",
      "TipoCargoFonteDados",
      "Funcao",
      "TipoAfastamentoFonteDados",
      "CargoDadosRepresentation",
      "CargoSimples",
      "CargoRemuneracaoFonteDados",
      "Cbo",
      "TipoMovimentacaoPessoalTipoAfastamento",
      "AreaAtuacao",
      "Curso",
      "PlanoPrevidenciaFonteDados",
      "QuadroCargo",
      "TipoDiariaFonteDados",
      "PlanoPrevidencia",
      "VinculoEmpregaticioMotivoRescisaoFonteDados",
      "NivelSalarialAssociacao",
      "TipoMovimentacaoPessoalTipoCargo",
      "CargoVinculoEmpregaticioFonteDados",
      "ConfiguracaoFerias",
      "CargoOrigem",
      "VinculoEmpregaticioFonteDados"
    ],
    "hierarchy_level": 0,
    "timestamp": "2025-06-03T23:15:05.220282",
    "source_file": "pessoal.json",
    "domain": "pessoal",
    "hash": "3d689e3c386c393de4ba2a286e3a9711",
    "related_chunks": [
      "matriculas_buscaMatriculasLotacoesFisicas_1_743b2c69",
      "matriculas_buscaMatriculasLotacoesFisicas_3_e7796baa",
      "vinculoEmpregaticio_buscaCategoriasTrabalhador_4_0eedb897",
      "historicoMatricula_buscaHistoricoMatriculaRelatorioFuncionario_2_69ee722a",
      "areaAtuacao_areaatuacao_3_931a34ca"
    ],
    "quality_score": 0.6000000000000001
  },
  "embeddings_text": "Section: cargo_buscaTodos\nType: example\nRelated to: ClasseReferenciaFonteDados, TipoCargo, Organograma\n\ngroovy\nfonteCargo = Dados.pessoal.v2.cargo;\n\ndadosCargo = fonteCargo.busca(campos: \"planosPrevidencia(id, descricao, tipo), configuracaoLicencaPremio(id, descricao, lancarLicencaAfastamento), id, descricao, quantidadeVagas, grauInstrucao, inicioVigencia\",ordenacao: \"id asc\")\n\npercorrer (dadosCargo) { itemCargo ->\n\n}\n\nKeywords: pessoal, busca, tipo, ordenacao, v2, cargo, campo, dados",
  "search_text": "cargo_buscaTodos ClasseReferenciaFonteDados TipoCargo Organograma Dados.pessoal.v2.cargo AtoFonteDados VinculoEmpregaticioCategoriaTrabalhadorFonteDados AtoMatriculaAssociacao CargoOrganograma NaturezaTextoJuridico TipoAto ConfiguracaoLicencaPremio CargoAreaAtuacao buscarTodos cargo CargoCompletoFonteDados ConfiguracaoLicencaPremioFonteDados TipoCargoFonteDados Funcao TipoAfastamentoFonteDados CargoDadosRepresentation CargoSimples CargoRemuneracaoFonteDados Cbo TipoMovimentacaoPessoalTipoAfastamento AreaAtuacao Curso PlanoPrevidenciaFonteDados QuadroCargo TipoDiariaFonteDados PlanoPrevidencia VinculoEmpregaticioMotivoRescisaoFonteDados NivelSalarialAssociacao TipoMovimentacaoPessoalTipoCargo CargoVinculoEmpregaticioFonteDados ConfiguracaoFerias CargoOrigem VinculoEmpregaticioFonteDados pessoal busca tipo ordenacao v2 cargo campo dados groovy\nfonteCargo = Dados.pessoal.v2.cargo;\n\ndadosCargo = fonteCargo.busca(campos: \"planosPrevidencia(id, descricao, tipo), configuracaoLicencaPremio(id, descricao, lancarLicencaAfastamento), id, descricao, quantidadeVagas, grauInstrucao, inicioVigencia\",ordenacao: \"id asc\")\n\npercorrer (dadosCargo) { itemCargo ->\n\n}"
}