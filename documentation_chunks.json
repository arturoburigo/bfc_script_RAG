[
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "## Introdução",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O bfc-script é um framework que possibilita a integração de scripts com aplicações. O framework oferece um ambiente de desenvolvimento, compilação e execução de scripts, bem como uma linguagem amigável para usuários não técnicos e APIs utilitárias.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "para usuários não técnicos e APIs utilitárias.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Linguagem",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A linguagem possui poucos comandos e algumas similaridades com a linguagem Java, como os operadores (lógico, comparação, atribuição e aritimético), o uso de chaves para circundar blocos, sintaxe case sensitive, etc. Para simplificar os scripts, não",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "sensitive, etc. Para simplificar os scripts, não é necessário usar ponto e vírgula no final de cada instrução e os comandos foram desenvolvidos no idioma português, para simplificar o seu uso à usuários sem experiência em linguagens de programação.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "sem experiência em linguagens de programação.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Comandos  \n##### imprimir  \nExibe uma mensagem no console.  \n```bfc-script\nimprimir 'John Doe'\n```  \n##### percorrer  \nPermite iterar valores e obter o índice atual da iteração.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```  \nO comando disponibiliza uma variável implícita chamada indice que representa o índice corrente da iteração.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```  \nA variável indice pode ser atribuída a uma outra variável com um nome personalizado, permitindo que a mesma seja acessada em diversos níveis do comando percorrer.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```  \nÉ possível também iterar pelos valores de um lista informando ou não o índice inicial e final da iteração  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```  \n* Caso o índice inicial não seja informado irá utilizar como padrão o valor 1 (primeiro item).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Caso o índice final não seja informado irá utilizar como padrão o índice final da lista (último item).\n###### Controle do fluxo de execução",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O fluxo de execução de um comando percorrer pode ser alterado utilizando as funções **parar()** e **continuar()**. Este controle é especialmente útil quando se deseja interromper a execução de um comando percorrer devido à um condição específica ou",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "percorrer devido à um condição específica ou avançar para um próximo item do laço.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### **parar()**  \nA função parar interrompe um comando percorrer em determinada condição, e continua a execução do script sem passar pelas repetições seguintes.  \nO seguinte código irá imprimir os números 1, 2 e a palavra Ok:  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```  \n###### **continuar()**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### **continuar()**  \nA função continuar faz com que o comando percorrer passe para a próxima repetição/item. Este função é especialmente útil em situações em que se deseje ignorar o processamento de um item com base em uma condição.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O seguinte código irá imprimir os números 1, 2 e 4 ignorando o número 3:  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```  \n###### Nomeando os comandos percorrer",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Em situações onde são utilizados mais de um comando percorrer aninhados e se deseje **_parar_** ou **_continuar_** um percorrer específico, a atribuição de um nome ao comando se faz necessário. Para nomear o comando basta preencher a propriedade",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "nomear o comando basta preencher a propriedade **nome** na declaração da instrução:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```  \nA saída do script será:  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```  \nA mesma regra se aplica ao comando **_continuar()_** , porém ao invés de interromper a execução do comando percorrer irá avançar para o próximo índice/item.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```0",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```0  \nA saída do script será:  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```1  \n##### retornar  \nPermite submeter dados como retorno de um script.  \nConforme podemos observar, a variável valor é submetida como retorno do script utilizando o comando retornar.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```2",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "No exemplo abaixo, os valores são retornados pelo comando retornar através de um mapa. As chaves valor e nome recebem seus respectivos valores e são submetidas ao comando retornar e serão resgatadas programaticamente através de um java.util.Map.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```3  \n##### se  \nPermite criar expressões condicionais.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```4  \n##### tentar/tratar/finalizar",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Às vezes, a execução de uma ação pode acarretar em uma exceção. Quando isto ocorre, é possível que seja realizado um tratamento para que o script continue sua execução realizando alguma outra ação, como por exemplo, notificar outros usuários, tratar",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "por exemplo, notificar outros usuários, tratar alguns retornos conhecidos, tentar realizar a ação novamente, etc.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "No bloco _tentar_ devem ser colocadas as ações onde pode ocorrer um erro. Por exemplo, chamar um serviço HTTP, SOAP, escrever em um arquivo, etc.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Dentro do bloco _tratar_ deve ser especificado o código que será executado em caso de erro dentro do bloco tentar. Nele, existe uma variável chamada excecao que é uma representação do erro ocorrido. Ela possui os seguintes atributos:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* _codigo_ \\- É um identificador alfanumérico erro para facilitar sua localização nos manuais e documentações\n* _mensagem_ \\- Uma mensagem passada pela API ou linguagem que representa a descrição do erro ocorrido",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* _linha_ \\- Linha onde ocorreu o erro\n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```5",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Ainda é possível que independentemente de ocorrer uma falha ou não, ao final da execução do método seja executada alguma ação. Para isso, existe também o bloco _finalizar_. Onde tudo o que for definido neste bloco, será executado independentemente",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "neste bloco, será executado independentemente de ocorrer um erro ou não.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```6  \nAlgumas observações referentes à este recurso:  \n* O bloco finalizar sempre é executado\n* Dentro do bloco finalizar, a variável _excecao_ já não está disponível\n* O comando _suspender_ não é tratado\n##### suspender",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### suspender  \nPermite suspender a execução de um script com uma exceção.  \n* se(codigo != 10){\n*    suspender \"O código $codigo é inválido\"\n* }\n##### esperar",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* }\n##### esperar  \nO comando esperar permite que a execução de um script entre em modo de pausa por um determinado intervalo tempo.  \nEste comando se mostra útil quando o acesso a um serviço é limitado por um intervalo de tempo.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```7",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```7  \nÉ possível informar o intervalo de tempo utilizando a forma simplificada de tempo/datas da engine:  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```8",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```8  \nO tempo máximo de espera permitido por comando é de 60 segundos. Essa função está disponíveis ao usuário final apenas através da **Ferramenta de Scripts**.  \n##### exportar",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### exportar  \nComando utilizado para exportar símbolos declarados no escopo atual. Aceita como parâmetro um mapa com o nome externo e uma referência ao recursos exportado.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```9",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```9  \nEste comando está disponível apenas na **Ferramenta de Scripts**.  \n##### importar",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### importar  \nComando utilizado para importar recursos de um componente. Aceita como parâmetro uma String com o nome do identificador do componente desejado, e retorna um objeto com os recursos importados.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```0",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```0  \nEste comando está disponível apenas na **Ferramenta de Scripts**.  \n#### Listas  \nTambém conhecida como Arrays, podemos trabalhar com listas de maneira bem simplificada.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```1",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```1\nA variável item e indice podem ser atribuídas à outras variáveis com nomes personalizados utilizando a seguinte sintaxe do comando percorrer:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```2",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```2  \nObtendo e atribuindo valores em posições **específicas** da lista. A primeira posição da lista tem o índice **0 (zero)** , a segunda posição tem o índice **1** , e assim por diante. Os dados são acessados assim: **lista[indice]**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```3  \n#### Mapas  \nÉ possível criar mapas simplificados e acessar seu valores de forma explicita.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```4  \nObserve o exemplo abaixo, usando uma **lista de mapas** :  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```5  \n#### Intervalos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Intervalos permitem que você crie uma lista de valores sequenciais podendo serem utilizados como listas. A notação .. define um intervalo, do primeiro item até o último. Intervalos definidos com a notação ..< incluem o primeiro valor, mas não o",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "a notação ..< incluem o primeiro valor, mas não o último valor.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```6  \n#### Datas",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A linguagem permite trabalhar com datas de forma bem simplificada. Várias funções estão embutidas nos elementos de data facilitando muito o uso, além de tornar as implementações bem intuitivas. O exemplo abaixo demonstra o uso de algumas funções",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "exemplo abaixo demonstra o uso de algumas funções para datas da API padrão e como utilizar estas funções de forma simplificada, além de demonstrar formas nativas para somar datas/horas/etc.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```7  \nÉ importante notar que os valores numéricos informados nas funções de data para representar ano, mês, dias, horas e segundos, diferentemente da formatação Brasileira, não devem conter zeros à esquerda:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```8",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```8  \n#### Valores nulos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Em programação de computadores, null é um valor especial para um ponteiro (ou qualquer outro tipo de referência) que indica que este ponteiro, intencionalmente, não se refere a um objeto (ponteiro nulo) -",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "não se refere a um objeto (ponteiro nulo) - [Wikipedia](https://pt.wikipedia.org/wiki/Null_\\(programa%C3%A7%C3%A3o\\)\\]\\]).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Este recurso se mostra útil para identificar quando um valor não esta disponível, assumindo um valor próprio para este comportamento, o nulo ou vazio.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A palavra reservada `nulo` representa o valor para este comportamento, de modo que no exemplo abaixo estamos dizendo que a variável `valorCusto` é igual a nulo ou em outras palavras, que seu valor é vazio.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```9\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```0\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```1",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```9\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```0\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```1\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```2\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```3",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```1\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```2\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```3\nEm algumas ocasiões, gostariamos de considerar um valor padrão onde o resultado seria nulo. Para este propósito utilizamos a expressão ternária (?:), como podemos observar abaixo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```4",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```4\nPoderiamos usar esta expressão diretamente, conforme o exemplo abaixo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```5",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A engine padrão disponibiliza uma API com várias funções utilitárias para manipulação de datas, caracteres e números. As funções são separadas por classes e são invocadas como métodos. Alguns métodos para manipulação de datas e caracteres podem ser",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "para manipulação de datas e caracteres podem ser utilizados de maneira direta, invocando o método apartir do próprio elemento, não necessitando a invocação através da classe. Durante a explanação das funções, serão sinalizados, as que possuem",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "das funções, serão sinalizados, as que possuem alternativa de uso direta. Esta sessão abordará detalhes de cada função da API padrão. Essas funções estarão disponíveis ao usuário final, e serão absorvidas plenamente conforme a utilização. Sinta-se a",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "plenamente conforme a utilização. Sinta-se a vontade para pular esta sessão neste primeiro momento.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Caracteres  \n##### capitaliza  \nPor meio desta função é possível colocar a primeira letra de cada palavra de um texto em maiúsculo e as outras letras para minúsculo.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```6  \n_Alternativa_  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```7  \n##### direita",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```7  \n##### direita  \nObtem uma quantidade específica de caracteres iniciados da direita para esquerda.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```8  \n_Alternativa_  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```9  \n##### equivalente",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```9  \n##### equivalente  \nVerifica se uma expressão esta contida em um texto. Mais sobre [expressões regulares](http://guia-er.sourceforge.net/metacaracteres.html#2)  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```0  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```1  \n##### esquerda",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```1  \n##### esquerda  \nObtem uma quantidade específica de caracteres iniciados da esquerda para direita.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```2  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```3  \n##### maisculo",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```3  \n##### maisculo  \nConverte todos os caracteres de um texto em maiúsculo.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```4  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```5  \n##### minusculo  \nConverte todos os caracteres de um texto em minusculo.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```6",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```6  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```7  \n##### posicao  \nObtem a posição onde um caracter se encontra em uma texto.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```8  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```9  \n##### posicao",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```9  \n##### posicao  \nObtem a posição inicial de uma [expressão regular](http://guia-er.sourceforge.net/metacaracteres.html#2) em uma texto.  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```0  \n_Alternativa_  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```1  \n##### posicaoFinal",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```1  \n##### posicaoFinal  \nObtem a posição final de uma [expressão regular](http://guia-er.sourceforge.net/metacaracteres.html#2) em uma texto.  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```2  \n_Alternativa_  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```3  \n##### removeEspacos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```3  \n##### removeEspacos  \nRemover o excesso de espaços de um texto.  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```4  \n_Alternativa_  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```5  \n##### removeEspacosDireita  \nRemove o excesso de espaços de um texto à esquerda.  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```6  \n_Alternativa_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```6  \n_Alternativa_  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```7  \n##### removeEspacosEsquerda  \nRemove o excesso de espaços de um texto à direita.  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```8  \n_Alternativa_  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```9  \n##### repetir",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\nletras = ['A','B','C']\npercorrer(de:2, ate:3, itens: letras){\nimprimir item\n}\n// Irá imprimir as letras B e C, ou seja, do índice 2 até o índice 3\n```9  \n##### repetir  \nRepete um texto especificado de acordo com uma quantidade definida.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```0  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```1",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Um exemplo prático de utilização é para completar os caracteres de um campo de um leiaute bancário. Por exemplo, no leiaute tem o campo nome com 100 caracteres, porém, se o nome não tiver 100 caracteres, então, o campo deve ser preenchido com",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "então, o campo deve ser preenchido com espaços em branco à direita.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Segue um exemplo de preenchimento de um campo do tipo String:  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```2  \nSegue um outro exemplo, utilizando o mesmo leiaute bancário, de preenchimento com zeros à esquerda para um determinado campo do tipo numérico:  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```3",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```3  \n##### sobrepor  \nSobrepõe um texto em outro em uma determinada posição e com uma quantidade especifica de caracteres.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```4  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```5  \n##### substituir",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```5  \n##### substituir  \nSubstitui as ocorrências de uma expressão localizada em um texto por outra expressão.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```6  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```7  \n##### subTexto",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```7  \n##### subTexto  \nObtém um número específico de caracteres de uma posição especifica de um texto.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```8  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\nparar()\n}\nimprimir item\n}\n8.\n//As instruções fora do comando percorrer serão executadas normalmente, somente o comando percorrer\n//será interrompido e não todo o script\nimprimir 'Ok'\n```9  \n##### tamanho  \nObtem o tamanho de um texto.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```0",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Obtem o tamanho de um texto.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```0  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```1  \n##### vazio  \nVerifica se uma palavra esta vazia.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```2  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```3  \n##### dividir",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```3  \n##### dividir  \nEsta função divide um texto de acordo com a expressão regular informada.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```4  \n_Alternativa_  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```5  \n#### Expressões regulares",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```5  \n#### Expressões regulares  \nA API de Caracteres suporta o uso de [expressões regulares](http://aurelio.net/regex/guia/) para realizar diversas operações baseadas em um padrão em textos.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```6",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```6  \nAs expressões são representadas na linguagem de scripts utilizando o seguinte padrão: **~/expressão/**  \nExemplo:  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```7  \nAs operações disponíveis em um expressão são:  \n##### equivalente()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### equivalente()  \nVerifica se o texto é totalmente equivalente a expressão.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```8  \n##### totalGrupos()  \nRetorna o total de [grupos](http://aurelio.net/regex/guia/grupo.html#2_4_3) da expressão regular.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```9",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(numeros){\nse(item == 3){\ncontinuar()\n}\nimprimir item\n}\n```9  \n##### dividir()  \nEsta função divide um texto de acordo com a expressão regular informada retornando uma lista com os valores separados.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```0  \n##### substituirPor(valor)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```0  \n##### substituirPor(valor)  \nRealiza a substituição de todos os valores da expressão encontrados no texto pelo valor informado no parâmetro.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```1  \n##### substituirPrimeiroPor(valor)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### substituirPrimeiroPor(valor)  \nRealiza a substituição do primeiro valor da expressão encontrado no texto pelo valor informado no parâmetro.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```2  \n##### encontrouPadrao()  \nIndica se o padrão da expressão foi encontrado no texto.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```3  \n##### concatenarValoresEncontrados()  \nRetorna todos os valores encontrados no texto pela expressão concatenados.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```4  \n##### concatenarValoresEncontrados(separador)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### concatenarValoresEncontrados(separador)  \nRetorna todos os valores encontrados no texto pela expressão concatenados com o separador informado no parâmetro.  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```5  \n##### Caractere de escape",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```5  \n##### Caractere de escape  \nA seguinte linha de código provoca um erro de sintaxe:  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```6",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```6  \nIsto corre pois o compilador interpreta os caracteres de aspas duplas dentro da cadeia de caracteres como delimitadores. Para eliminar o problema emprega-se o caractere de escape \\ (barra contrária, ou backslash) antes das aspas:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```7  \nVeja este caso:  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```8",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Veja este caso:  \n```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```8  \nIsso ocorre porque o compilador interpreta as barras contrárias como caracteres de escape. Mas não é o que queremos. Queremos imprimir um caminho de pastas usando, literalmente, as barras contrárias:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3,4]\npercorrer(itens: numeros, nome: 'p1'){\nimprimir 'p1: ' + item\npercorrer(de: 1, ate: 5){\nse (indice == 3){\nparar 'p1'\n}\nimprimir 'p2: ' + indice\n}\n}\n```9  \nDentro das expressões regulares, é necessário inserir, no caractere de escape, um **til** entre as barras contrárias:  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```0",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```0  \nVeja abaixo um exemplo usando caractere de escape. Repare que, dentro do último comando \"expressao\", há uma solcitiação de substituir uma barra por uma string vazia.  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```1  \n#### Múltiplas ocorrências e grupos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Múltiplas ocorrências e grupos  \nUma expressão pode encontrar diversas ocorrências de um padrão em um texto. Estes valores podem ser organizados por grupos ou simplesmente por valor localizado.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Percorrendo todas as ocorrências encontradas em um texto:  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```2  \n##### posicaoInicial()  \nRetorna a posição inicial do texto que coincida com a expressão localizada. Caso o padrão não seja encontrado retorna -1.  \n##### posicaoFinal()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### posicaoFinal()  \nRetorna a posição final do texto que coincida com a expressão localizada. Caso o padrão não seja encontrado retorna -1.  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```3  \n##### posicaoFinal()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```3  \n##### posicaoFinal()  \nRetorna a posição final do texto que coincida totalmente com a expressão utilizada. Caso não encontrado retorna -1.  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```4  \n##### valoresGrupos()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```4  \n##### valoresGrupos()  \nRetorna uma lista com todos os valores encontrados pelos grupos especificados na expressão.  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```5  \n##### valorGrupo(indice)  \nRetorna o valor do grupo encontrado conforme índice e expressão.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```6  \n##### valorEncontrado()  \nRetorna o conteúdo do texto encontrado de acordo com a expressão/grupo utilizado.  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```7  \n##### concatenarValoresGrupos()  \nRetorna os valores dos grupos da expressão concatenados.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```8  \n##### concatenarValoresGrupos(separador)  \nRetorna os valores dos grupos da expressão concatenados com o separador informado no parâmetro.  \n```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```9  \n#### Datas  \n##### adicionaDias",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\np1: 1 // primeiro item da lista de números do percorrer 'p1'\np2: 1 // primeiro índice do segundo percorrer\np2: 2 // ...\np2: 3 // ...\np2: 4 // No índice 4 o comando parar 'p1' foi executado interrompendo a execução de todos os comandos percorrer até o 'p1'\n```9  \n#### Datas  \n##### adicionaDias  \nAdiciona uma quantidade especificada de dias à uma data.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```00  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```01  \n##### adicionaHoras  \nAdiciona uma quantidade especificada de horas em uma data/hora.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```02  \n##### adicionaMeses",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona uma quantidade especificada de meses em uma data. Caso o dia da data especificadanão seja um dia válido para o mês resultante, Ex: 31/10/2011, adiciona 1 mês, valor inválido para nova data 31/11/2011, a diferença de dias será acrescentada",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "31/11/2011, a diferença de dias será acrescentada na nova data, Ex:31/10/2011, adiciona 1 mês fica 01/12/2011.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```03  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```04  \n##### adicionaMinutos  \nAdiciona uma quantidade especificada de minutos em uma data/hora.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```05  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```06  \n##### adicionaSegundos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```06  \n##### adicionaSegundos  \nAdiciona uma quantidade especificada de segundos em uma data/hora.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```07  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```08  \n##### ano  \nObtem o ano em que se encontra uma determinada data.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```09",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```09  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```10  \n##### data  \nGera uma data sem hora de acordo com o dia, mês e ano passados por parâmetro  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```11  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```12  \n##### dataHora",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```12  \n##### dataHora  \nGera uma data com a hora de acordo com o dia, mês, ano, hora e minuto passados por parâmetro  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```13  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```14  \n##### dia",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```14  \n##### dia  \nObtem o dia em que se encontra uma determinada data.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```15  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```16  \n##### diaSemana",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```16  \n##### diaSemana  \nObtem o dia da semana em que se encontra uma determinada data, considerando-se o domingo comoprimeiro dia e o sábado como o sétimo dia.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```17  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```18  \n##### diferencaAnos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```18  \n##### diferencaAnos  \nCalcula a diferença em anos entre duas datas.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```19  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```20  \n##### diferencaDias  \nCalcula a diferença em dias entre duas datas.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```21  \n_Alternativa_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```21  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```22  \n##### diferencaHoras  \nCalcula a diferença em horas entre duas datas.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```23  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```24  \n##### diferencaMeses  \nCalcula a diferença em meses entre duas datas.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Calcula a diferença em meses entre duas datas.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```25  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```26  \n##### diferencaMinutos  \nCalcula a diferença em minutos entre duas datas/hora.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```27  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```28",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```27  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```28  \n##### diferencaSegundos  \nCalcula a diferença em segundos entre duas datas/hora  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```29  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```30  \n##### ehData  \nVerifica se um texto é uma data válida.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Verifica se um texto é uma data válida.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```31  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```32  \n##### extenso  \nObtem a data por extenso.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```33  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```34  \n##### hoje  \nObtem a data e hora do sistema operacional.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Obtem a data e hora do sistema operacional.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```35  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```36  \n##### hora  \nObtem a hora em que se encontra uma determinada data/hora.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```37  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```38  \n##### mes",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```38  \n##### mes  \nObtem o mês em que se encontra uma determinada data.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```39  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```40  \n##### minuto  \nObtem os minutos referentes a uma determinada data/hora  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```41",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```41  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```42  \n##### nomeDiaSemana  \nObtem o nome do dia da semana.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```43  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```44  \n##### nomeMes  \nObtem o nome do mês de uma data.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```45  \n_Alternativa_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```45  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```46  \n##### periodo  \nCria um período com data inicial e data final.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```47  \n##### removeDias  \nRemove uma quantidade especificada de dias de uma data.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```48  \n_Alternativa_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```48  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```49  \n##### removeMeses",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Remove uma quantidade especificada de meses de uma data. Caso o dia da data especificada não seja um dia válido para o mês resultante, Ex: 31/12/2011, remove 1 mês, valor inválido para nova data 31/11/2011, a diferença de dias será acrescentada da",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "a diferença de dias será acrescentada da nova data, Ex: 31/12/2011,remove 1 mês fica 01/12/2011.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```50  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```51  \n##### segundo  \nObtem os segundos referentes a uma determinada data/hora.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```52  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```53  \n##### formatar",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```53  \n##### formatar  \nObtem o valor de uma data formatado de acordo com um padrão especificado.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```54  \n_Alternativa_  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```55  \nExemplos:  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```56  \nPadrões para formatação:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```56  \nPadrões para formatação:  \nLetra  | Descrição  | Exemplos\n---|---|---\ny  | Ano  | 2009; 09\nM  | Mês do ano  | Julho; Jul; 07\nw  | Semana no ano  | 27\nW  | Semana no mês  | 2\nD  | Dia no ano  | 189\nd  | Dia no mês  | 10",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "D  | Dia no ano  | 189\nd  | Dia no mês  | 10\nF  | Dia da semana no mês  | 2\nE  | Nome do dia da semana  | Segunda-feira, Seg\nu  | Número do dia da semana (1=Segunda.7=Domingo)  | 1\na  | Indicador de AM/PM  | AM\nH  | Hora no dia (0-23)  | 0",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "H  | Hora no dia (0-23)  | 0\nk  | Hora no dia (1-24)  | 24\nK  | Hora no dia (0-11)  | 0\nh  | Hora no dia (1-12)  | 12\nm  | Minuto na hora  | 55\ns  | Segundos no minuto  | 30\nS  | Milissegundo  | 978  \n#### Numeros  \n##### absoluto",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Numeros  \n##### absoluto  \nCalcula o valor absoluto de um número.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```57  \n##### arredonda  \nArredonda um valor.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```58  \n##### coseno  \nCalcula o co-seno de um ângulo.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```59  \n##### decimal",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```59  \n##### decimal  \nConverte o valor de um texto em um número decimal de alta precisão.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```60  \n##### ehNumero  \nVerifica se um texto é um número válido.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```61  \n##### exponencial",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```61  \n##### exponencial  \nObtem o exponencial de um número específico.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```62  \n##### fatorial  \nObtem o fatorial de um número.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```63  \n##### inteiro",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```63  \n##### inteiro  \nConverte o valor de um texto em um número inteiro. Caso o texto represente um número decimal, este será truncado para um inteiro, ou seja, a parte decimal será descartada.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```64  \n##### logaritmo",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```64  \n##### logaritmo  \nInforma o logaritmo natural de um número.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```65  \n##### logaritmo10  \nInforma logaritmo de base 10 de um número.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```66  \n##### maximo  \nObtem o maior valor entre dois números.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Obtem o maior valor entre dois números.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```67  \n##### minimo  \nObtem o menor valor entre dois números.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```68  \n##### numero",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```68  \n##### numero  \nConverte o valor de um texto em um número, retornando o tipo Long para números inteiros e Double para números decimais.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "IMPORTANTE! Esta função NÃO deve ser utilizada para trabalhar com valores monetários. O tipo Double não é adequado para esse fim e vai resultar em imprecisões que ao longo de um cálculo podem alterar de forma significativa o resultado. A função",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "de forma significativa o resultado. A função adequada para este fim é a Numeros.decimal.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```69  \n##### pi  \nMultiplica o valor de PI pelo número especificado.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```70  \n##### piso  \nObtem o maior número que é menor ou igual ao número espedificado, sendo este número inteiro.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```71  \n##### raiz",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```71  \n##### raiz  \nCalcula a raiz quadrada de um número.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```72  \n##### randomico  \nObtem um número aleatório entre 1 a um valor limite especificado.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```73  \n##### resto",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```73  \n##### resto  \nRetorna o resto da divisão realizada entre o dividendo e o divisor, que são passados porparâmetro.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```74  \n##### seno  \nCalcula o seno de um ângulo.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```75  \n##### seZero",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```75  \n##### seZero  \nTesta os valores passados como parâmetro e retorna o primeiro diferente de zero.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```76  \n##### tangente  \nCalcula a tangente de um ângulo.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```77  \n##### teto",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```77  \n##### teto  \nObtem o menor número que é maior ou igual ao número espedificado, sendo este número inteiro.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```78  \n##### trunca  \nTrunca um valor de acordo com o número de casas decimais especificadas.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```79",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```79  \n#### JSON  \n##### ler  \nConverte um json em um mapa  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```80  \n##### escrever  \nConverte um objeto em json  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```81  \n## API de Arquivos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O bfc-script disponibiliza uma API para leitura e escrita de arquivos. As funções são separadas por tipo de arquivo e são invocadas como métodos. Esta sessão abordará o uso de cada função da API de arquivos e os detalhes de cada implementação. Essas",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "e os detalhes de cada implementação. Essas funções estarão disponíveis ao usuário final apenas através da **Ferramenta de Scripts** , e serão absorvidas plenamente conforme a utilização.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Leitura de arquivos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A leitura de arquivos está disponível através da função _Arquivo.ler()_. Esta função irá retornar uma implementação específica com operações distintas para realizar a leitura do arquivo conforme tipo. Esta função contém algumas variações para",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "tipo. Esta função contém algumas variações para permitir diferentes origens e a passagem de parâmetros para as implementações:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Arquivo.ler(_arquivo ou conteúdo_): Realiza a leitura do arquivo utilizando a implementação padrão para arquivos texto.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Arquivo.ler(_arquivo ou conteúdo, tipo do arquivo_): Realiza a leitura do arquivo utilizando a implementação própria para o tipo de arquivo informado.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Arquivo.ler(_arquivo ou conteúdo, tipo do arquivo, parametros_): Realiza a leitura de arquivo utilizando a implementação própria para o tipo do arquivo informado permitindo a passagem de parâmetros específicos da implementação.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Exemplo de utilização:  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```82  \n#### Escrita de arquivos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A criação de um novo arquivo está disponível através da função _novo_. Esta função irá retornar uma implementação específica com operações distintas para realizar a escrita do arquivo conforme tipo. A função _novo_ contem algumas variações:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Arquivo.novo(_nome do arquivo_): Cria um novo arquivo utilizando a implementação padrão para arquivos texto.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Arquivo.novo(_nome do arquivo, tipo do arquivo_): Cria um novo arquivo arquivo utilizando a implementação própria para o tipo de arquivo informado.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Arquivo.novo(_nome do arquivo, tipo do arquivo, parametros_): Cria um novo arquivo utilizando a implementação própria para o tipo de arquivo informado permitindo a passagem de parâmetros específicos da implementação.\nExemplo de utilização:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Exemplo de utilização:  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```83  \n#### Download dos arquivos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Por padrão a API de arquivos não disponibiliza para download os arquivos criados pelas implementações. Para que os mesmos sejam incluídos no arquivo zip de resultado da execução de um script através da **Ferramenta de Scripts** é necessário",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "através da **Ferramenta de Scripts** é necessário adicionar estes arquivos ao resultado.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```84  \n## Implementações  \n### Arquivos Texto (txt)  \n#### Leitura  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```85  \nLendo um arquivo com um Encoding específico (Por padrão utiliza UTF-8):  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```86  \n##### lerLinha()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```86  \n##### lerLinha()  \nRealiza a leitura de uma linha do arquivo e retorna o conteúdo lido.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```87  \n##### contemProximaLinha()  \nVerificar se o arquivo sendo lido contém uma próxima linha  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```88  \n#### Escrita",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```88  \n#### Escrita  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```89  \nCriando um novo arquivo com um Encoding específico (Por padrão utiliza UTF-8):  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```90  \n##### escrever(texto)  \nRealiza a escrita de um conteúdo no arquivo  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```91",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```91  \n##### novaLinha()  \nRealiza a escrita de uma quebra de linha no arquivo  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```92  \n### Arquivos CSV (csv)  \n#### Leitura  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```93  \nLendo um arquivo com um Encoding específico (Por padrão utiliza UTF-8):",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```86  \n**Parâmetros de leitura:**  \n* _delimitador_ : Caracter que delimita os valores do arquivo CSV. Por padrão utiliza uma virgula.\n* _encoding_ : Determina o encoding a ser usado na leitura do arquivo. Por padrão utiliza UTF-8.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### lerLinha()  \nRealiza a leitura de uma linha do arquivo e retorna o conteúdo lido.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```87  \n##### contemProximaLinha()  \nVerificar se o arquivo sendo lido contém uma próxima linha  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```88  \n##### pularLinhas(int linhas)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```88  \n##### pularLinhas(int linhas)  \nIgnora a leitura da quantidade de linhas informado no parâmetro com base na linha atual  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```97  \n##### lerProximoValor()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```97  \n##### lerProximoValor()  \nRealiza a leitura do próximo valor do arquivo considerando o delimitador. Esta função realiza a leitura de todo o arquivo e não somente da linha atual.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```98  \n##### contemProximoValor()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```98  \n##### contemProximoValor()  \nIndica se existe um próximo valor a ser lido no arquivo atual.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```99  \n#### Escrita  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```00  \nCriando um novo arquivo com um Encoding específico (Por padrão utiliza UTF-8):",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```01  \n**Parâmetros de escrita:**  \n* _delimitador_ : Caracter para delimitar os valores do arquivo CSV. Por padrão utiliza uma virgula.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* _entreAspas_ : Indica se os valores escritos no arquivo deverão estar entre aspas duplas. Utilizar _S_ para Sim e _N_ para Não.\n* _encoding_ : Determina o encoding a ser usado na criação do arquivo. Por padrão utiliza UTF-8.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escrever(texto)  \nRealiza a escrita de um conteúdo no arquivo utilizando o delimitador parametrizado.  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```91  \n##### novaLinha()  \nRealiza a escrita de uma quebra de linha no arquivo  \n```bfc-script\npercorrer(ate:5){\nimprimir indice\n}\n```92  \n### Arquivos XML (xml)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Arquivos XML (xml)  \nOs documentos XML são lidos e escritos por item/evento. Cada parte do documento é considerado um item e possui caracteristicas diferentes. No exemplo abaixo podemos afirmar que o documento XML possui 5 itens/eventos:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```04  \ndos quais:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```05\n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```06\n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```07\n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```08\n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```09  \n### Implementação  \n#### Leitura  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```10  \n##### tipo()  \nRetorna o tipo do item sendo lido. Os valores disponíveis são:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* INICIO_DOCUMENTO\n* FIM_DOCUMENTO\n* INICIO_ELEMENTO\n* FIM_ELEMENTO\n* ATRIBUTO\n* DTD\n* CDATA\n* NAMESPACE\n* TEXTO\n* COMENTARIO\n* ESPACO\n* DECLARACAO_NOTACAO\n* DECLARACAO_ENTIDADE\n* REFERENCIA_ENTIDADE\n##### valor()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### valor()  \nRetorna o valor texto do item corrente. Caso o item seja um elemento complexo irá retornar em branco. Tipos suportados: _INICIO_ELEMENTO_ , _FIM_ELEMENTO_ , _ATRIBUTO_ , _REFERENCIA_ENTIDADE_ , _DECLARACAO_ENTIDADE_.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### contemValor()  \nIndica se o item atual contém um valor do tipo texto e se o mesmo é diferente de vazio.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```11  \n##### contemNome()  \nIndica se o item atual contém um nome e se o mesmo é diferente de vazio.  \n##### nome()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### nome()  \nRetorna o nome do item atual. Caso o item não seja suportado irá retornar em branco. Tipos suportados: _INICIO_ELEMENTO_ , _FIM_ELEMENTO_ , _ATRIBUTO_ , _REFERENCIA_ENTIDADE_ , _DECLARACAO_ENTIDADE_.  \n##### xml()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### xml()  \nRetorna o item atual no formato XML.  \n##### namespaces()  \nRetorna uma lista contendo os namespaces presentes no item atual. Tipos suportados: _INICIO_ELEMENTO_ , _FIM_ELEMENTO_ , _ATRIBUTO_ , _NAMESPACE_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Um Namespace contem as seguintes informações:  \n* prefixo(): Prefixo do namespace\n* namespace(): Valor do namespace  \n##### contemNamespace(namespace)  \nIndica se o item atual contém um namespace declarado igual ao informado por parâmetro.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### contemNamespace(namespace, prefixo)  \nIndica se o item atual contém um namespace declarado com valor e prefixo igual aos parâmetros.  \n##### atributos()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### atributos()  \nRetorna uma lista contendo os atributos presentes no item atual. Tipos suportados: _INICIO_ELEMENTO_  \nUm Atributo contem as seguintes informações:  \n* prefixo(): Prefixo do namespace\n* namespace(): Namespace do atributo",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* namespace(): Namespace do atributo  \n* nome(): nome do atributo\n* valor(): valor do atributo  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```12  \n##### contemAtributo(nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```12  \n##### contemAtributo(nome)  \nIndica se o elemento atual contém um atributo com o nome informado no parâmetro. Tipos suportados: _INICIO_ELEMENTO_ , _ATRIBUTO_  \n##### contemAtributo(nome, namespace)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### contemAtributo(nome, namespace)  \nIndica se o elemento atual contém um atributo com o nome e namespace informado no parâmetro. Tipos suportados: _INICIO_ELEMENTO_ , _ATRIBUTO_  \n##### contemAtributo(nome, namespace, prefixo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### contemAtributo(nome, namespace, prefixo)  \nIndica se o elemento atual contém um atributo com o prefixo, nome e namespace informado no parâmetro. Tipos suportados: _INICIO_ELEMENTO_ , _ATRIBUTO_  \n##### atributo(nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### atributo(nome)  \nRetorna o [atributo](index.html#apiArquivosImplementacoesXmlTiposAtributo) do elemento com base no nome informado no parâmetro. Tipos suportados: _INICIO_ELEMENTO_ , _ATRIBUTO_  \n##### atributo(nome, namespace)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### atributo(nome, namespace)  \nRetorna o [atributo](index.html#apiArquivosImplementacoesXmlTiposAtributo) do elemento com base no namespace e nome informado nos parâmetros. Tipos suportados: _INICIO_ELEMENTO_ , _ATRIBUTO_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### atributo(nome, namespace, prefixo)  \nRetorna o [atributo](index.html#apiArquivosImplementacoesXmlTiposAtributo) do elemento com base no prefixo, namespace e nome informado nos parâmetros. Tipos suportados: _INICIO_ELEMENTO_ , _ATRIBUTO_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehTipoInicioDocumento  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a INICIO_DOCUMENTO  \n##### ehTipoFimDocumento",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehTipoFimDocumento  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a FIM_DOCUMENTO  \n##### ehTipoTexto  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a TEXTO",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehTipoComentario  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a COMENTARIO  \n##### ehTipoFimElemento",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehTipoFimElemento  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a FIM_ELEMENTO  \n##### ehTipoInicioElemento",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehTipoInicioElemento  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a INICIO_ELEMENTO  \n##### ehTipoEspaco",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehTipoEspaco  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a ESPACO  \n##### ehTipoCData  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a CDATA",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehTipoAtributo  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a ATRIBUTO  \n##### ehTipoNamespace  \nIndica se o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do item atual é igual a NAMESPACE",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### contemProximo()  \nIndica se o documento atual contem um próximo item a ser lido.  \n##### tipoProximo()  \nRetorna o [tipo](index.html#apiArquivosImplementacoesXmlTipos) do próximo item caso a leitura do documento não tenha sido finalizada.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### proximo()  \nItera no documento passando a leitura para o próximo item. Tem como retorno o tipo do novo item.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```13  \n##### proximaTag()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```13  \n##### proximaTag()  \nItera no documento passando a leitura para o próxima tag encontrada (INICIO_ELEMENTO ou FIM_ELEMENTO). Tem como retorno o tipo do novo item atual.  \n##### contemProximoElemento()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### contemProximoElemento()  \nIndica se o documento atual contem um próximo elemento a ser lido.  \n##### proximoElemento()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### proximoElemento()  \nItera no documento passando a leitura para o próximo elemento (INICIO_ELEMENTO). Tem como retorno um valor booleano indicando se a leitura do próximo elemento foi realizada ou se o documento chegou ao fim.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```14  \n##### proximoElemento(nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Itera no documento passando a leitura para o próximo elemento cujo nome seja igual ao valor informado no parâmetro. Tem como retorno um valor booleano indicando se a leitura do elemento foi realizada ou se o documento chegou ao fim e o mesmo não foi",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "ou se o documento chegou ao fim e o mesmo não foi encontrado.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### proximoElemento(nome, namespace)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Itera no documento passando a leitura para o próximo elemento cujo nome e namespace sejam iguais aos valores informados nos parâmetros. Tem como retorno um valor booleano indicando se a leitura do elemento foi realizada ou se o documento chegou ao",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "foi realizada ou se o documento chegou ao fim e o mesmo não foi encontrado.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Escrita  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```15  \n**Parâmetros de escrita:**  \n* _encoding_ : Encoding do documento XML. Por padrão utiliza UTF-8.\n* _indentar_ : Indica se o documento será escrito indentado ou de forma linear. Utilizar _S_ para Sim e _N_ para Não.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### namespacePadrao(namespace)  \nDefine o namespace padrão do elemento XML.  \n##### prefixo(prefixo, uri)  \nDefine o prefixo de uma URI.  \n##### escreverAtributo(nome, valor)  \nEscreve um novo atributo no elemento atual.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```16",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```16  \n##### escreverAtributo(nome, valor, namespace)  \nEscreve um novo atributo no elemento atual informando também o namespace.  \n##### escreverAtributo(nome, valor, namespace, prefixo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve um novo atributo no elemento atual informando também o namespace.  \n##### escreverCData(data)  \nEscreve uma área com conteúdo CDATA no documento XML.  \n##### escreverTexto(texto)  \nEscreve texto no item atual.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```17",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve texto no item atual.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```17  \n##### escreverComentario(comentario)  \nEscreve um comentário no documento XML.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```18  \n##### escreverNamespace(namespace)  \nEscreve um namespace no elemento atual.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve um namespace no elemento atual.  \n##### escreverNamespace(namespace, prefixo)  \nEscreve um namespace com prefixo no elemento atual.  \n##### escreverDTD(dtd)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverDTD(dtd)  \nEscreve um [DTD](http://www.w3schools.com/xml/xml_dtd_intro.asp) no documento XML.  \n##### escreverElementoVazio(elemento)  \nEscreve um elemento vazio no documento XML:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```19",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```19  \n##### escreverElementoVazio(elemento, namespace)  \nEscreve um elemento vazio e namespace no documento XML.  \n##### escreverElementoVazio(elemento, namespace, prefixo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve um elemento vazio e namespace com prefixo no documento XML.  \n##### escreverInicioDocumento()  \nEscreve a declaração de um documento XML.  \n##### escreverInicioDocumento(encoding)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverInicioDocumento(encoding)  \nEscreve a declaração de um documento XML informando o encoding.  \n##### escreverInicioDocumento(encoding, versao)  \nEscreve a declaração de um documento XML informando o encoding e versão.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```20",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```20  \n##### escreverInicioDocumento(encoding, versao, standalone)  \nEscreve a declaração de um documento XML informando o encoding, versão e standalone.  \n##### escreverFimDocumento()  \nEscreve o fim do documento XML.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve o fim do documento XML.  \n##### escreverInicioElemento(nome)  \nEscreve o início de um elemento no documento XML.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```21  \n##### escreverInicioElemento(nome, namespace)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverInicioElemento(nome, namespace)  \nEscreve o início de um elemento com namespace no documento XML.  \n##### escreverInicioElemento(nome, namespace, prefixo)  \nEscreve o início de um elemento com namespace e prefixo no documento XML.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverFimElemento()  \nEscreve o fim do elemento atual.  \n##### nomeElementoAtual()  \nRetorna o nome do elemento sendo editado.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```22  \n##### escreverFimElementos()  \nEscreve o fim de todos os elementos atualmente abertos.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```23  \n##### escreverFimElementos(elementoParar)  \nEscreve o fim de todos os elementos abertos abaixo do elemento informado no parâmetro.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```24  \n##### escreverElementoTexto(nome, valor)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverElementoTexto(nome, valor)  \nEscreve um elemento texto no documento XML.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```25  \n##### escreverElementoTexto(nome, valor, namespace)  \nEscreve um elemento texto com namespace.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve um elemento texto com namespace.  \n##### escreverElementoTexto(nome, valor, namespace, prefixo)  \nEscreve um elemento texto com namespace e prefixo.  \n##### escrever(xml)  \nEscreve um bloco XML no arquivo atual.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```26",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```26  \n##### contemElementoAberto()  \nIndica se o documento atual contém algum início de elemento sem um fim declarado.  \n##### escreverReferencia(nome, id, valor)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverReferencia(nome, id, valor)  \nEscreve a referência à uma [entidade](http://www.w3schools.com/xml/xml_dtd_entities.asp) no documento XML.  \n##### escreverInstrucaoProcessamento(target, conteudo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve as instruções de processamento no documento.  \n##### escreverEspaco(conteudo)  \nEscreve um item texto do [tipo](index.html#apiArquivosImplementacoesXmlTipos) ESPACO  \n##### escreverEspacoIgnoravel(conteudo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverEspacoIgnoravel(conteudo)  \nEscreve um item texto do [tipo](index.html#apiArquivosImplementacoesXmlTipos) ESPACO ignorável.  \n### Arquivos JSON (json)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Arquivos JSON (json)  \nOs documentos JSON são lidos e escritos por item/evento. Cada parte do documento é considerado um item e possui caracteristicas diferentes. No exemplo abaixo podemos afirmar que o documento JSON possui 4 itens:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```27  \ndos quais:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```28\n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```29\n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```30\n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```31  \n### Implementação  \n#### Leitura  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```32  \nAvança a leitura para o próximo item  \n##### ehInicioObjeto()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehInicioObjeto()  \nRetorna um valor booleano indicando se o item atual é o inicio de um objeto  \n##### ehInicioMatriz()  \nRetorna um valor booleano indicando se o item atual é o inicio de uma matriz (array)  \n##### ehFimObjeto()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehFimObjeto()  \nRetorna um valor booleano indicando se o item atual é o fim de um objeto  \n##### ehFimMatriz()  \nRetorna um valor booleano indicando se o item atual é o fim de uma matriz (array)  \n##### ehNomeCampo()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehNomeCampo()  \nRetorna um valor booleano indicando se o item atual é o nome de um campo  \n##### ehTexto()  \nRetorna um valor booleano indicando se o item atual é um texto  \n##### ehNumero()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehNumero()  \nRetorna um valor booleano indicando se o item atual é um número  \n##### ehBooleano()  \nRetorna um valor booleano indicando se o item atual é um booleano  \n##### ehNulo()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### ehNulo()  \nRetorna um valor booleano indicando se o item atual é nulo  \n##### texto()  \nRetorna o valor do item atual como texto  \n##### numero()  \nRetorna o valor do item atual como número  \n##### booleano()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### booleano()  \nRetorna o valor do item atual como booleano  \n##### jsonParser()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Retorna a implementação nativa do parse que está sendo usado, para possibilitar implementações avançadas, acesse <https://fasterxml.github.io/jackson-core/javadoc/2.5/com/fasterxml/jackson/core/JsonParser.html> para mais informações.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Escrita  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```33  \nEscreve o inicio de uma matriz (array)  \n##### escreverFimMatriz()  \nEscreve o fim de uma matriz (array)  \n##### escreverInicioObjeto()  \nEscreve o inicio de um objeto  \n##### escreverFimObjeto()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverFimObjeto()  \nEscreve o fim de um objeto  \n##### escreverNomeCampo(nome)  \nEscreve o nome do campo  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```34  \n##### escreverTexto(texto)  \nEscreve um texto  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```35  \n##### escreverNumero(numero)  \nEscreve um número",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve um número  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```36  \n##### escreverBooleano(booleano)  \nEscreve um boolenao  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```37  \n##### escreverNulo()  \nEscreve o valor nulo  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```38  \n##### escreverObjeto(objeto)  \nEscreve um objeto completo",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Escreve um objeto completo  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```39  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```40  \n##### escreverCampoTexto(nome, texto)  \nEscreve o nome e o valor de campo do tipo texto  \n##### escreverCampoBooleano(nome, booleano)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverCampoBooleano(nome, booleano)  \nEscreve o nome e o valor de campo do tipo booleano  \n##### escreverCampoNulo(nome)  \nEscreve o nome e o valor de campo nulo  \n##### escreverCampoNumero(nome, numero)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverCampoNumero(nome, numero)  \nEscreve o nome e o valor de campo do tipo numero  \n##### escreverCampoInicioMatriz(nome)  \nEscreve o nome e o inicio de um campo do tipo matriz (array)  \n##### escreverCampoInicioObjeto(nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### escreverCampoInicioObjeto(nome)  \nEscreve o nome e o inicio de um campo do tipo objeto  \n##### escreverCampoObjeto(nome, objeto)  \nEscreve o nome e o valor de um campo do tipo objeto  \n##### jsonGenerator()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### jsonGenerator()  \nRetorna a implementação nativa do jsonGenerator que está sendo utilizado, para mais informações acesse <https://fasterxml.github.io/jackson-core/javadoc/2.8/com/fasterxml/jackson/core/JsonGenerator.html>",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Arquivos ZIP (zip)  \n#### Leitura  \nA leitura de arquivos .zip está disponível através da seguinte chamada:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```41  \nOnde iterando, é possível navegar entre os arquivos:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```42",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```42  \n**Obs:** Caso durante a geração do zip, seja utilizado um encoding diferente do UTF-8, o valor deve ser informado. Por exemplo:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```43  \n#### Escrita  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```44  \n##### criarDiretorio",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```44  \n##### criarDiretorio  \nRealiza a criação de um diretório em branco no arquivo zip  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```45  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```46  \n##### adicionar(Arquivo)  \nAdiciona um arquivo no diretório raiz do arquivo zip  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```47",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```47  \n##### adicionar(Arquivo, Nome do arquivo no zip)  \nAdiciona um arquivo no diretório raiz do arquivo zip utilizando o nome informado no segundo parâmetro  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```48  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```49",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```48  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```49  \n##### adicionar(Arquivo, Nome do arquivo no zip, Diretório)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona um arquivo em um determinado diretório do arquivo zip utilizando o nome informado como parâmetro. Caso o diretório não exista no arquivo zip o mesmo será criado.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```50  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```51",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```50  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```51  \nÉ possível criar subdiretórios utilizando o separador **/** no nome do diretório:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```52  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```53  \n##### adicionar(Lista de arquivos)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### adicionar(Lista de arquivos)  \nAdiciona um ou mais arquivos no diretório raiz do arquivo zip.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```54  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```55  \n##### adicionar(Lista de arquivos, Diretório)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### adicionar(Lista de arquivos, Diretório)  \nAdiciona um ou mais arquivos no diretório informado no parâmetro do arquivo zip. Caso o diretório não exista o mesmo será criado.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```56  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```57  \n##### comentario(Comentário)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```57  \n##### comentario(Comentário)  \nAdiciona um comentário às informações do arquivo zip  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```58  \n## API de E-mail",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "## API de E-mail  \nO bfc-script disponibiliza uma API para envio de mensagens de e-mails. Essas funções estarão disponíveis ao usuário final apenas através da **Ferramenta de Scripts** , e serão absorvidas plenamente conforme a utilização.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Para criar uma nova mensagem de e-mail a ser enviada deve-se utilizar a função Email.**novo()** :  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```59",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```59  \nUma mensagem contem diversas caracteristicas que serão apresentadas a seguir, uma vez configurada a mensagem, o envio é realizado através da função **enviar()** da mensagem.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```60  \n### Mensagem  \n#### de(email)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```60  \n### Mensagem  \n#### de(email)  \nDefine o email do remetente da mensagem  \n#### de(email, nome)  \nDefine o email e nome do remetente da mensagem  \n#### para(email)  \nAdiciona um email de destinatário na mensagem",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona um email de destinatário na mensagem  \n#### para(email, nome)  \nAdiciona um email e nome de destinatário na mensagem  \n#### copiaPara(email)  \nAdiciona um email de cópia na mensagem  \n#### copiaPara(email, nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### copiaPara(email, nome)  \nAdiciona um email e nome de cópia na mensagem  \n#### copiaOcultaPara(email)  \nAdiciona um email de cópia oculta na mensagem  \n#### copiaOcultaPara(email, nome)  \nAdiciona um email e nome de cópia oculta na mensagem",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### responderPara(email)  \nAdiciona um email no qual a mensagem deverá ser respondia pelos destinatários  \n#### responderPara(email, nome)  \nAdiciona um email e nome no qual a mensagem deverá ser respondia pelos destinatários",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### mensagem(mensagem)  \nDefine o conteúdo da mensagem  \n#### mensagemHtml(mensagem)  \nDefine o conteúdo da mensagem como HTML  \n#### assunto(assunto)  \nDefine o assunto da mensagem  \n#### cabecalho(nome, valor)  \nAdiciona um cabecalho no e-mail",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona um cabecalho no e-mail  \n#### autenticacao([usuario, senha, porta, host])  \nAutentica o envio do email. Exemplo de uso:  \n.autenticacao([ usuario: joao, senha: joao, porta: 587, host: smtp.live.com])  \n#### enviar()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### enviar()  \nEnvia a mensagem de e-mail  \n### Anexos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Anexos  \nA API conta com 2 tipos de anexos disponíveis, sendo um baseado em fonte de arquivos e outro em URL. Exemplos de fonte de arquivos são os parâmetros do script do tipo Arquivo e artefatos gerados pela API de arquivos.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Criando anexos:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A criação de anexos pode ser realizada através de funções específicas da API ou de forma simplificada pela mensagem. Anexos criados pelas funções da API devem ser manualmente adicionados à mensagem. Por motivo de performance, caso o mesmo anexo do",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Por motivo de performance, caso o mesmo anexo do tipo Arquivo tenha que ser enviado para vários destinatários em mensagens diferentes, este deverá ser criado pela API uma única vez no processo.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Funções de anexo da API  \n##### Email.criarAnexoUrl()  \nCria um novo anexo do tipo URL.  \n##### Email.criarAnexoUrl(url)  \nCria um novo anexo do tipo URL informando o endereço.  \n##### Email.criarAnexoUrl(url, nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### Email.criarAnexoUrl(url, nome)  \nCria um novo anexo do tipo URL informando o endereço e o nome a ser utilizado na mensagem.  \n##### Email.criarAnexoArquivo()  \nCria um novo anexo do tipo arquivo.  \n##### Email.criarAnexoArquivo(arquivo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### Email.criarAnexoArquivo(arquivo)  \nCria um anexo do tipo arquivo com base em uma fonte de arquivos.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```61  \nCria um anexo do tipo arquivo com base em uma fonte de arquivos. O nome do anexo será o mesmo informado no parâmetro nome.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Propriedades dos anexos  \n##### nome(nome)  \nNome do anexo  \n##### descricao(descricao)  \nDescrição do anexo  \n##### dispostoParaVisualizacao()  \nDefine a disposição do anexo para visualização INLINE no corpo do e-mail.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### dispostoComoAnexo()  \nDefine a disposição do anexo como ATTACHMENT (arquivo anexado).  \n##### incorporado()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### incorporado()  \nDefine o anexo como incorporado. Esta opção irá gerar um CID com base no nome do anexo e poderá ser utilizado no corpo da mensagem para referenciar o anexo.  \n##### naoIncorporado()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### naoIncorporado()  \nDefine o anexo como não incorporado. Por padrão todos os anexos criados não são incorporados.  \n##### url(url)  \nDefine a url para anexos do tipo URL.  \n##### arquivo(arquivo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### arquivo(arquivo)  \nDefine a fonte do arquivo para anexos do tipo Arquivo.  \n#### Funções de anexo da Mensagem  \n##### anexar(anexo)  \nAdiciona um anexo criado a partir das funções Email.criarAnexoXX() à mensagem  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```62",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```62  \n##### anexarArquivo(origem)  \nAdiciona um anexo à mensagem com base em uma fonte de arquivo. Exemplos de fontes são o valor de um parâmetro do script do tipo arquivo e um arquivo criado pela API de arquivos.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```63",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```63  \n##### anexarArquivo(origem, nome)  \nAdiciona um anexo à mensagem com base em uma fonte de arquivo. O nome do anexo na mensagem será o mesmo informado no parâmetro nome.  \n##### anexarArquivo(anexoArquivo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### anexarArquivo(anexoArquivo)  \nAdiciona um anexo criado a partir da função Email.criarAnexoArquivo à mensagem  \n##### anexarUrl(url)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### anexarUrl(url)  \nAdiciona um anexo à mensagem com base em uma URL. O download do anexo será realizado e adicionado a mensagem.  \n##### anexarUrl(url, nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### anexarUrl(url, nome)  \nAdiciona um anexo à mensagem com base em uma URL. O download do anexo será realizado e um anexo com o nome parametrizado será adicionado.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```64  \n##### anexarUrl(anexoUrl)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```64  \n##### anexarUrl(anexoUrl)  \nAdiciona um anexo criado a partir da função Email.criarAnexoUrl à mensagem  \n### Exemplos  \n#### Envio de e-mail autenticado  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```65  \n#### Envio de e-mail com anexos  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```66",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```66  \n#### Enviar arquivos dos parâmetros do script e API de Arquivos  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```67  \n## API de Notificações",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O bfc-script disponibiliza uma API para envio de notificações aos usuários do sistema. Essas funções estarão disponíveis ao usuário final apenas através da **Ferramenta de Scripts** , e serão absorvidas plenamente conforme a utilização.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Para criar uma nova notificação deve-se utilizar a função Notificacao.**nova()** :  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```68",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```68  \nUma mensagem contem diversas caracteristicas que serão apresentadas a seguir, uma vez configurada a mensagem, o envio é realizado através da função **enviar()** da mensagem.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```69  \n### Mensagem  \n#### para(usuarios)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Mensagem  \n#### para(usuarios)  \nAdiciona um usuário como destinatário da notificação. É possível adicionar vários usuários:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```70",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```70  \nTambém é possível adicionar o usuário logado como destinatário da notificação usando o identificador `usuario.id`:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```71  \nMais um exemplo, usando o usuário logado e outros usuários:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```72",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```72  \n#### mensagem(mensagem)  \nDefine a mensagem a ser enviada pela notificação  \n#### link(href)  \nDefine o link a ser enviado pela notificação  \n#### link(href, titulo)  \nDefine o link com título a ser enviado pela notificação",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### link(href, titulo, label)  \nDefine o link, titulo e label a ser enviado pela notificação  \n#### enviar()  \nRealiza o envio da notificação aos destinatários.  \n### Exemplos  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```73  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```74  \n## API de Mensagens",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O bfc-script disponibiliza uma API para envio de mensagens aos usuários do sistema. Essas funções estarão disponíveis ao usuário final apenas através da **Ferramenta de Eventos** , e serão absorvidas plenamente conforme a utilização.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A API possibilita o envio de quatro tipos de mensagens: erro, aviso, informação e sucesso, conforme o exemplo abaixo::  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```75  \nÉ possível ainda adicionar mensagens parametrizadas:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```76  \n## API de SOAP",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "## API de SOAP  \nO bfc-script disponibiliza uma API para consumo de serviços web no padrão SOAP. Essas funções estarão disponíveis ao usuário final apenas através da **Ferramenta de Scripts** , e serão absorvidas plenamente conforme a utilização.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A API conta com algumas representações básicas de funcionamento sendo elas o **Serviço** , a **Mensagem** e a **Resposta**. O **Serviço** trata-se de um webservice SOAP a ser consumido, cada interação com esse webservice é realizado através de uma",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "com esse webservice é realizado através de uma **Mensagem**. O produto desta mensagem quando executada é uma **Resposta** , essa resposta pode ser transformada em vários tipos de saídas, sendo elas um Leitor de XML da API de arquivo, Uma fonte de",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "um Leitor de XML da API de arquivo, Uma fonte de arquivo para utilização em conjunto com outras APIs (E-mail, Arquivos), O conteúdo XML da resposta em sí ou simplesmente a impressão da resposta no console do script.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Serviço  \nPara criar um novo serviço SOAP à ser consumido deve-se utilizar a função Soap.**servico** , as opções disponíveis para criação e configurações dos serviços são:  \n#### Soap.servico(url)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Soap.servico(url)  \nCria um novo servico com base na URL informada por parâmetro.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```77  \n#### Soap.servico(url, namespace, prefixo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Soap.servico(url, namespace, prefixo)  \nCria um novo serviço com base na URL informada por parâmetro. O namespace e prefixo (target namespace) informados serão utilizados como padrão na montagem da mensagem e manipulação dos elementos.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```78  \n#### Soap.servico(url, namespace, prefixo, usuario, senha)  \nEsta opção dá suporte a criação de serviços que utilizem mecanismos de autenticação HTTP básico permitindo informar também o usuário e senha de conexão como parâmetros.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Soap.criarNamespace(namespace, prefixo)  \nCria uma representação de um namespace e prefixo para ser reutilizado nas funções da API, desta forma não é necessário informar namespace e prefixo a cada função.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Os valores podem ser acessados através das funções: **namespace()** e **prefixo()** da representação criada.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```79  \n#### cabecalho(nome, valor)  \nAdiciona um cabeçalho(header) HTTP na requisição SOAP do serviço.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```80",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```80  \n#### cookie(nome, valor, path)  \nAdiciona um cookie na requisição SOAP do serviço.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```81  \n**detalhe:** path é opcional e pode ser omitido.  \n#### mensagem()  \nCria uma nova mensagem (envelope) à ser enviado ao serviço.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### mensagem(namespace, prefixo)  \nCria uma nova mensagem (envelope) à ser enviado ao serviço sobrescrevendo o namespace e prefixo padrão informados na criação do serviço.  \n#### mensagem([namespace](index.html#apiSoapServicoCriarNamespace))",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Cria uma nova mensagem (envelope) à ser enviado ao serviço sobrescrevendo o namespace e prefixo padrão informados na criação do serviço. Esta opção deve ser utilizada com namespaces criados com a função",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "ser utilizada com namespaces criados com a função [Soap.criarNamespace](index.html#apiSoapServicoCriarNamespace).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### tempoLimite(valor)  \nDefine o tempo limite para a execução das requisições. O valor deve ser informado em milissegundos.  \n### Mensagem",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A representação de uma mensagem é composta basicamente de um cabeçalho e de um corpo. Ambos podem conter diversos [elementos](index.html#apiSoapMensagemElemento) que por sua vez podem possuir outros [elementos](index.html#apiSoapMensagemElemento).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "[elementos](index.html#apiSoapMensagemElemento). Esta estrutura de árvore é baseada no padrão XML e é através dela que os parâmetros de entrada da funcionalidade do webservice são informados. Em resumo, uma mensagem destina-se à execução de um",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "resumo, uma mensagem destina-se à execução de um método/função de um serviço SOAP.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "As opções disponíveis para montagem da mensagem são:  \n#### namespace(namespace, prefixo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### namespace(namespace, prefixo)  \nAdiciona um namespace a mensagem. Este namespace será adicionado ao envelope SOAP da mensagem e poderá ser utilizado na declaração dos [elementos](index.html#apiSoapMensagemElemento).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### namespace([namespace](index.html#apiSoapServicoCriarNamespace))",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona um namespace a mensagem. Este namespace será adicionado ao envelope SOAP da mensagem e poderá ser utilizado na declaração dos [elementos](index.html#apiSoapMensagemElemento).  \n#### namespaces()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### namespaces()  \nRetorna uma lista com os [namespaces](index.html#apiSoapServicoCriarNamespace) declarados na mensagem.  \n#### namespacePadrao()  \nRetorna o [namespaces](index.html#apiSoapServicoCriarNamespace) definido como padrão da mensagem.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### corpo()  \nRetorna o [elemento](index.html#apiSoapMensagemElemento) do corpo da mensagem.  \n#### corpo(conteudo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### corpo(conteudo)  \nEscreve o conteúdo XML no corpo da mensagem. É importante lembrar que o conteúdo deverá ser um XML válido e utilizar os namespaces declarados na mensagem/corpo.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```82  \n#### corpo(arquivo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```82  \n#### corpo(arquivo)  \nEscreve o conteúdo XML no corpo da mensagem com base em uma fonte de arquivo. É importante lembrar que o conteúdo do arquivo deverá ser um XML válido e utilizar os namespaces declarados na mensagem/corpo.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```83  \n#### cabecalho()  \nRetorna o [elemento](index.html#apiSoapMensagemElemento) do cabeçalho da mensagem.  \n#### cabecalho(conteudo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### cabecalho(conteudo)  \nEscreve o conteúdo XML no cabeçalho da mensagem. É importante lembrar que o conteúdo deverá ser um XML válido e utilizar os namespaces declarados na mensagem/corpo.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```84  \n#### cabecalho(arquivo)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### cabecalho(arquivo)  \nEscreve o conteúdo XML no cabecalho da mensagem com base em uma fonte de arquivo. É importante lembrar que o conteúdo do arquivo deverá ser um XML válido e utilizar os namespaces declarados na mensagem/corpo.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```85  \n#### operacao(operacao)  \nDefine a operação/método/função a ser executada no webservice. Este valor será informado no cabeçalho HTTP SOAPAction da mensagem.  \n#### executar()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### executar()  \nExecuta a chamada ao método/função do serviço SOAP e retorna uma representação da [resposta](index.html#apiSoapResposta).  \n#### executar(operacao)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Executa a chamada ao método/função do serviço SOAP e retorna uma representação da [resposta](index.html#apiSoapResposta). Esta opção permite que o a operação à ser executada seja informada diretamente pela função executar() sem a necessidade de",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "pela função executar() sem a necessidade de pré-definir o valor através da função operacao().",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### requisicao()  \nRetorna uma representação para leitura da requisição SOAP realizada. Esta leitor de mensagem contém as mesmas funcionalidades da [resposta](index.html#apiSoapResposta) e poderá ser utilizado para fins de depuração.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Elementos  \nUm elemento pode ser considerado como uma representação baseada em árvore para descrever uma informação na mensagem. Os elementos de uma mensagem (corpo, cabeçalho) SOAP utilizam o padrão XML.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "As opções disponíveis para manipulação dos elementos são:  \n**nome()**  \nRetorna o nome do elemento.  \n**namespace()**  \nRetorna o [namespace](index.html#apiSoapServicoCriarNamespace) do elemento.  \n**adicionarElemento(nome)**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarElemento(nome)**  \nAdiciona/cria um novo elemento. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso necessário.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```86",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```86  \nO elemento _elemEnderecos_ irá produzir o seguinte XML na mensagem:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```87  \n**adicionarElemento(nome, namespace, prefixo)**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona/cria um novo elemento informando também o namespace e prefixo de declaração do elemento. É importante lembrar que o namespace utilizado deve estar declarado na mensagem ou elemento pai. O retorno desta função é a representação do novo",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso necessário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarElemento(nome,[namespace](index.html#apiSoapServicoCriarNamespace))**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona/cria um novo elemento informando também o namespace de declaração do elemento. É importante lembrar que o namespace utilizado deve estar declarado na mensagem ou elemento pai. O retorno desta função é a representação do novo elemento criado",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso necessário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarTexto(texto)**  \nAdiciona conteúdo do tipo texto à um elemento. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso necessário.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```88  \nproduzirá:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```88  \nproduzirá:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```89  \n**adicionarElementoTexto(nome, texto)**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarElementoTexto(nome, texto)**  \nAdiciona um novo elemento com conteúdo do tipo texto. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso necessário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```90  \nproduzirá:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```89  \n**adicionarElementoTexto(nome, texto, namespace, prefixo)**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona um novo elemento com conteúdo do tipo texto indicando também o namespace e prefixo que o elemento está vinculado. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "utilizado para adicionar elementos filhos caso necessário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarElementoTexto(nome, texto,[namespace](index.html#apiSoapServicoCriarNamespace))**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona um novo elemento com conteúdo do tipo texto indicando também o namespace e prefixo que o elemento está vinculado. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "utilizado para adicionar elementos filhos caso necessário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarAtributo(nome, valor)**  \nAdiciona um novo atributo ao elemento atual. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso necessário.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```92",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```92  \nproduzirá:  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```93  \n**adicionarAtributo(nome, valor, namespace, prefixo)**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona um novo atributo ao elemento atual indicando também o namespace e prefixo ao qual o atributo está vinculado. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "utilizado para adicionar elementos filhos caso necessário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarAtributo(nome, valor,[namespace](index.html#apiSoapServicoCriarNamespace))**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona um novo atributo ao elemento atual indicando também o namespace e prefixo ao qual o atributo está vinculado. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "utilizado para adicionar elementos filhos caso necessário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarNamespace(namespace, prefixo)**  \nAdiciona a declaração de um namespace ao elemento atual. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso necessário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**adicionarNamespace([namespace](index.html#apiSoapServicoCriarNamespace))**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Adiciona a declaração de um namespace ao elemento atual. O retorno desta função é a representação do novo elemento criado e poderá ser utilizado para adicionar elementos filhos caso necessário.  \n**elementoAnterior()**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**elementoAnterior()**  \nUtilizado para navegação entre os elementos criados de uma mesma família. Esta opção contém a representação do elemento pai do elemento corrente.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```94\n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```95  \n**contemElementoAnterior()**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```95  \n**contemElementoAnterior()**  \nIndica se o elemento atual possui um próximo elemento.  \n**proximoElemento()**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**proximoElemento()**  \nUtilizado para navegação entre os elementos criados de uma mesma família. Esta opção contém a representação do primeiro elemento filho do item corrente.  \n**contemProximoElemento()**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**contemProximoElemento()**  \nIndica se o elemento atual possui um elemento anterior.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```96  \n#### Métodos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```96  \n#### Métodos  \nMétodos são representações auxiliares para simplificar a montagem dos elementos da mensagem nos casos em que o webservice contém apenas parâmetros simples como entrada.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**_As opções disponíveis para criação de métodos a partir da mensagem são:_**  \n**metodo(operacao)**  \nCria um novo método para a operação/função informado no parâmetro.  \n**metodo(operacao, namespace, prefixo)**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**metodo(operacao, namespace, prefixo)**  \nCria um novo método utilizando a operação, namespace e prefixo informados nos parâmetros.  \n**metodo(operacao,[namespace](index.html#apiSoapServicoCriarNamespace))**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Cria um novo método utilizando a operação e [namespaces](index.html#apiSoapServicoCriarNamespace) informados nos parâmetros.  \n**Exemplo:**  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```97  \n**_As funções disponíveis na representação de métodos são:_**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**parametro(nome, valor)** Adiciona um parâmetro de entrada ao método atual.  \n**parametro(nome, valor, namespace)** Adiciona um parâmetro de entrada ao método atual utilizando o namespace informado.  \n**operacao()**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**operacao()**  \nRetorna a operação do método atual.  \n**namespace()**  \nRetorna o namespace do método atual.  \n**elemento()**  \nRetorna o [elemento](index.html#apiSoapMensagemElemento) que representa o método atual.  \n**requisicao()**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**requisicao()**  \nRetorna uma representação para leitura da requisição SOAP realizada. Esta leitor de mensagem contém as mesmas funcionalidades da [resposta](index.html#apiSoapResposta) e poderá ser utilizado para fins de depuração.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**executar()**  \nExecuta a chamada do método atual e retorna uma representação da [resposta](index.html#apiSoapResposta).  \n**mensagem()**  \nRetorna a representação da mensagem em que o método foi criado.  \n**Exemplo:**  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```98",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Exemplo:**  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```98  \n### Resposta  \nUma mensagem quando executada tem como retorno uma representação de resposta. Esta resposta pode ser processada/lida de maneiras distintas conforme necessidade.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "As opções de processamento disponíveis são:  \n#### imprimir()  \nImprime o conteúdo XML da resposta no console do editor de scripts.  \n#### conteudo()  \nRetorna o conteúdo XML da resposta no formato caracter.  \n```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```99  \n#### arquivo()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){\nimprimir indice\n}\n```99  \n#### arquivo()  \nRetorna uma fonte de arquivo que contém o conteúdo da resposta. Esta opção deverá ser utilizada em conjunto com as demais APIs da engine de scripts.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```00  \n#### xml()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```00  \n#### xml()  \nRetorna um [leitor de arquivos XML da API de Arquivos](index.html#apiArquivosImplementacoesXml) para o conteúdo da resposta.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```01  \n#### anexos()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```01  \n#### anexos()  \nRetorna uma lista com os anexos presentes na mensagem de retorno do serviço.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```02  \n#### anexo(id)  \nLocaliza e retorna um anexo de acordo com o seu id  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```03  \n### Base64",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Base64 é um método para codificação de dados para transferência na Internet. É utilizado frequentemente para transmitir dados binários por meios de transmissão que lidam apenas com texto, como por exemplo para enviar arquivos anexos por e-mail. Uma",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "para enviar arquivos anexos por e-mail. Uma abordagem muito comum, inclusive praticada por alguns tribunais de contas, é o uso do Base64 para envio de arquivos binários em webservices SOAP.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Segue um exemplo de como utilizar a API provida no BFCScript para este propósito:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```04  \nÉ possível codificar um arquivo zip gerado em um script:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```05  \nOu ainda codificar um arquivo recebido por parâmetro:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```06",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```06  \nÉ possível ainda definir o encoding para codificação e/ou decodificação (o encoding padrão é UTF-8):  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```07  \nTambém é possível decodificar para um arquivo de forma que o mesmo possa ser utilizado na API de Arquivos:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```08  \nA função BaseCodec está disponível ao usuário final apenas através da **Ferramenta de Scripts**.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Atenção** : existe um limite cumulativo de **30MB** para codificar/decodificar conteúdo Base64 durante uma execução de script. A soma de todo o conteúdo processado deve ficar sempre abaixo deste limite. Lembrando que este limite incinde sobre a",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "limite. Lembrando que este limite incinde sobre a saída gerada pela API, e não sobre as entradas utilizadas.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Contornando a limitação cumulativa",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Caso seja necessário codificar ou decodificar diversos conteúdos e esteja sendo esbarrado no limite cumulativo, pode-se utilizar métodos que não retornam como o resposta o conteúdo (não alocando no contexto global), e sim disponibilizam ele dentro",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "contexto global), e sim disponibilizam ele dentro de uma closure, que acaba liberando a memória alocada mais rapidamente:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```09  \nFazendo o uso dessas chamadas, o limite passa a ser de 30mb de forma individual e não descontando do limite cumulativo global.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**É recomendado que não se atríbua essa variável interna para um contexto maior, permitindo assim que a memória alocada seja liberada**  \n### Hash",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Uma função de hash pode ser utilizada para verificar a integridade de arquivos, uma vez que uma hash é gerada com base em um texto ou arquivo, não existe uma maneira de fazer o caminho contrário. Uma abordagem muito comum, inclusive praticada por",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "abordagem muito comum, inclusive praticada por alguns tribunais de contas, é o uso de verificações de integridade de arquivos binários enviados em webservices SOAP.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Existem alguns algoritmos popularmente utilizados para gerar uma hash de algo, são eles MD5, SHA-1, SHA-256 e SHA-512:  \n**padraoMD5()**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```10",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**padraoMD5()**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```10  \nQuando utilizado um texto, é possível definir o charset para codificação (o charset padrão é UTF-8):  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```11",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```11  \nQuando utilizado um arquivo, não é possível definir o charset para codificação, o charset utilizado é o do arquivo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```12  \n**padraoSHA1()**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```13",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**padraoSHA1()**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```13  \nQuando utilizado um texto, é possível definir o charset para codificação (o charset padrão é UTF-8):  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```14",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```14  \nQuando utilizado um arquivo, não é possível definir o charset para codificação, o charset utilizado é o do arquivo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```15  \n**padraoSHA256()**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```16",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**padraoSHA256()**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```16  \nQuando utilizado um texto, é possível definir o charset para codificação (o charset padrão é UTF-8):  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```17",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```17  \nQuando utilizado um arquivo, não é possível definir o charset para codificação, o charset utilizado é o do arquivo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```18\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```19",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```18\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```19  \nQuando utilizado um texto, é possível definir o charset para codificação (o charset padrão é UTF-8):  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```20",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```20  \nQuando utilizado um arquivo, não é possível definir o charset para codificação, o charset utilizado é o do arquivo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```21  \n**padraoHex()**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```22",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**padraoHex()**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```22  \nQuando utilizado um texto, é possível definir o charset para codificação (o charset padrão é UTF-8):  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```23",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```23  \nQuando utilizado um arquivo, não é possível definir o charset para codificação, o charset utilizado é o do arquivo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```24  \n**Exemplo 1:**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```25  \n**Exemplo 2:**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```26  \n**Exemplo 3:**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```26  \n**Exemplo 3:**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```27  \n**Exemplo 4:**  \nArmazenar o retorno em formato de anexo de um serviço.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```28  \n## API de Fonte de Dados",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O bfc-script disponibiliza uma API para consumo das fonte de dados registradas pelas aplicações no catálogo de dados da Betha Sistemas. Essas funções estarão disponíveis ao usuário final apenas através da **Ferramenta de Scripts** , e serão",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "através da **Ferramenta de Scripts** , e serão absorvidas plenamente conforme a utilização.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Uma fonte de dados é composta por um Ativo, um Tema, e as Operações propriamente ditas. A API de script utiliza a seguinte estrutura para representar estes componentes:  \n**Dados**.**ativo**._versao_.**tema**.**operacao()**  \n### Ativo",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Ativo  \nUm Ativo pode ser considerado como a fonte/origem das informações. É nele que as operações de busca e manipulação de dados serão executadas.  \n### Tema",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Tema  \nUm tema pertence à um Ativo e representa um grupo de informação em comum. Exemplos de possíveis temas do Ativo folha seriam funcionarios, feriados, etc.  \n### Operações",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Operações são funções de busca/manipulação de dados disponibilizadas através de um Tema. Considerando o exemplo do tema funcionário do ativo folha, teriamos como possíveis operações a criação de um funcionário, busca dos registros, cálculo da folha,",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "busca dos registros, cálculo da folha, etc.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "As Operações básicas de um Tema são:  \n* Operação de busca\n* Operação de criação\n* Operação de atualização\n* Operação de exclusão\n**A disponibilidade de cada operação depende do ativo e tema utilizado.**  \n### Operação de busca",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Operação de busca  \nA operação de busca padrão conta com os seguintes parâmetros:  \n* **criterio** : Parâmetro utilizado para filtrar os dados da busca.\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```29",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **ordernacao** : Parâmetro utilizado para informar a ordem do resultado da busca. o valor deste parâmetro deve ser preenchido com o nome dos campos separados por virgula seguido da orientação (asc - Ascendente, desc - Descendente).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```30  \n* **campos** : Parâmetro utilizado para informar quais campos do registro devem estar no resultado da busca.\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```31",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```31  \n* **parametros** : Utilizado para informar os valores dos parâmetros da operação. O nome dos parâmetros pode variar conforme ativo, tema e operação utilizada.\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```32",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **consolidado** : Utilizado para informar se os valores retornados devem ser consolidados de acordo com o cadastro de contextos compartilhados. Caso seja passado true, será executado uma consulta na fonte de dados para cada entidade e database",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "na fonte de dados para cada entidade e database configurados, ignorando a entidade e database atual.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```33  \n**Exemplo:**  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```34  \nPara retornar um único item, deve-se utilziar o parâmetro primeiro:true na operação de busca.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```35",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **valorPadrao** : Parâmetro utilizado para ativar/desativar o valor padrão dos campos quando nulos. Caso este parâmetro seja _verdadeiro_ os registros das fontes de dados poderão conter propriedades nulas que deverão ser tratadas pelo próprio",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "nulas que deverão ser tratadas pelo próprio script.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```36  \n### Operação de criação  \nA operação de criação padrão conta com os seguintes parâmetros:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **parametros** : Utilizado para informar os valores dos parâmetros da operação. O nome dos parâmetros pode variar conforme ativo, tema e operação utilizada.\n* **conteudo** : Dados do registro a ser criado.\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```37",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```37  \n### Operação de atualização  \nA operação de atualização padrão conta com os seguintes parâmetros:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **parametros** : Utilizado para informar os valores dos parâmetros da operação. O nome dos parâmetros pode variar conforme ativo, tema e operação utilizada.\n* **conteudo** : Dados do registro a ser atualizado.\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```38",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```38  \n### Operação de exclusão  \nA operação de exclusão padrão conta com os seguintes parâmetros:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **parametros** : Utilizado para informar os valores dos parâmetros da operação. O nome dos parâmetros pode variar conforme ativo, tema e operação utilizada.\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```39  \n## API de Scripts",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O bfc-script disponibiliza uma API que provê suporte à chamada entre scripts. Esta funcionalidade permite que uma lógica comum seja reutilizada por diversos scripts e está disponivel ao usuário final apenas através da **Ferramenta de Scripts**.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Para que seja possível invocar um script através da API é necessário configurar o identificador único do script à ser executado.  \n### Executando scripts",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Executando scripts  \nA execução de um script é realizada utilizando a palavra reservada **Scripts** , seguida do identificador e método de execução:  \n_Scripts_.**identificador**._executar(parametros)_  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```40  \n#### identificador",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```40  \n#### identificador  \nIdentificador único do script.  \n#### executar(parametros)  \nFunção responsável pela execução do script.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```41  \n#### variaveis(Map)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```41  \n#### variaveis(Map)  \nFunção responsável por enviar variáveis para outro script sem a necessidade de ter parâmetros no script que recebe essas variáveis.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O script de exemplo tem dois parâmetros do tipo arquivo, com os nomes arquivo e arquivo2, esses arquivos são enviados para o segundo script identificado por scriptb:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```42",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```42  \nNo script que recebe as variáveis, os valores estão disponíveis da seguinte maneira:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```43  \nO scriptb não precisa ter nenhum parâmetro para receber as variáveis e qualquer tipo pode ser passado por variaveis().",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Outro exemplo seria um script principal que gera um arquivo csv com valores obtidos em execuções de outros três scripts:  \nScript principal:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```44  \nScript com o identificador geraarquivo.funcionarios1:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```45",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```45  \nScript com o identificador geraarquivo.funcionarios2:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```46  \nScript com o identificador componente3:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```47  \nAo executar o script principal o arquivo csv é gerado.  \n### Retorno dos scripts",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Retorno dos scripts  \nA execução de um script através da API sempre irá produzir um resultado, Este resultado é representado da seguinte forma:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```48  \nAs opções disponíveis em um resultado são:  \n#### valor",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### valor  \nRecupera o valor retornado pelo script executado.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```49  \n#### vazio  \nVerifica se o script invocado retornou algum resultado.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```50  \n#### variavel(nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```50  \n#### variavel(nome)  \nRecupera o valor de uma variável declarada no script invocado.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```51  \nNote que a variável _log_ foi declarada no conteúdo do script somar:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```52  \n#### retornar",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```52  \n#### retornar  \nO retorno de um script é realizado utilizando o comando _**retornar**_:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```53  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```54  \n### Executando scripts em lote",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A execução de scripts em lote pode ser realizada através da criação de um script centralizador. Este script será responsável por orquestrar a execução dos demais scripts obedecendo a ordem cronológica de execução. Exemplo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```55",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```55  \n### Componentes  \n**Quando utilizar componentes?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Quando utilizar componentes?**  \nQuando para resolver uma dada situação seja mais indicado fragmentar o script, seja por uma questão de organização ou de praticidade em ter funções com finalidades específicas devidamente separadas.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Por exemplo: Consideremos que um dado Tribunal de Contas exige bimestralmente a informação de todos os fornecedores de uma entidade via Web Service. Neste caso, poderiam existir os seguintes recursos:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Script principal, onde recebe os parâmetros para gerar as informações e enviá-las ao Tribunal de Contas;\n* Componente para identificar todos os fornecedores passíveis de envio ao Tribunal de Contas;",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Componente para gerar o arquivo a ser enviado ao Tribunal de Contas;\n* Componente para enviar o arquivo ao Tribunal de Contas via Web Service;\n**Por que utilizar componentes?**  \nSão algumas vantagens na utilização dos componentes:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Melhor performance na execução do script: Por conta do recurso Exportar e Importar e também porque os componentes são executados exclusivamente a partir de um script que o invoca;",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Organização de código: Por meio da fragmentação de código orientada ao objetivo fim do componente;",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Privacidade de variáveis e closures (funções): Num componente é possível declarar variáveis e closures localmente, e então escolher quais serão expostos para quando o componente for importado por outro script;",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Reutilização de código: Pode ser utilizado o mesmo componente em mais de um script;\n#### Exemplos de utilização:  \n**Exemplo 1:** Este exemplo demonstra um componente que abstrai uma API REST.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Segue o código de um **componente** cujo identificador foi denominado _restapi_ e que será chamado pelo **script pai** :  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```56",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O comando **exportar** é utilizado para definir quais recursos serão expostos pelo componente. Repare que as declarações que não foram exportadas permanecem privadas ao componente, permitindo assim uma modelagem mais robusta de funcionalidades",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "uma modelagem mais robusta de funcionalidades comuns a vários scripts.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Segue o código do **script pai** que chama o componente acima:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```57",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A importação dos recursos de um componente é realizada utilizando a palavra reservada **Scripts** , seguido do identificador e o método de importação. O resultado é atribuído a uma variável, a partir da qual os recursos importados podem ser",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "a partir da qual os recursos importados podem ser acessados.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Alternativamente, pode-se utilizar a palavra reservada **importar**, passando como parâmetro o identificador do componente, no caso, fica assim:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```58",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```58  \n**Exemplo 2:** Este exemplo trata de múltiplos componentes para um único Script Pai:  \nExistem 3 componentes:  \n* Que simula uma calculadora;\n* Que executa um contador;\n* Que gera um log;",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Que executa um contador;\n* Que gera um log;\n_Componente 1: identificador ped.calculadora_  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```59  \n_Componente 2: identificador ped.contador_  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```60  \n_Componente 3: identificador ped.log_  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```61",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```61  \n_Finalmente, o**Script Pai** :_  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```62  \n## API de HTTP",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "## API de HTTP  \nO bfc-script disponibiliza uma API para consumo de serviços web HTTP. Essas funções estarão disponíveis ao usuário final apenas através da **Ferramenta de Scripts** , e serão absorvidas plenamente conforme a utilização.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A API conta com algumas representações básicas de funcionamento sendo elas a **Requisição** e a **Resposta**. A **Requisição** trata-se da definição de uma ou várias chamadas à um serviço HTTP comum, cada interação com esse serviço é realizado",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "cada interação com esse serviço é realizado através dos métodos/verbos padrões do HTTP. O produto desta interação quando executada é uma **Resposta** , essa resposta pode ser transformada em vários tipos e saídas, sendo elas um JSON no formato de",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "tipos e saídas, sendo elas um JSON no formato de Mapa (quando a resposta do serviço for JSON), Uma fonte de arquivo para utilização em conjunto com outras APIs (E-mail, Arquivos), O conteúdo da resposta no formato de texto em sí ou simplesmente a",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "no formato de texto em sí ou simplesmente a impressão da resposta no console do script.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "![Fluxo da API de HTTP](images/fluxo-api-http.png)  \n### Requisição  \nPara criar uma nova requisição HTTP deve-se utilizar a função Http.**servico** , a função recebe como parâmetro a URL do serviço a ser consumido:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```63",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```63  \nA URL informada pode conter marcadores, estes marcadores serão substituídos por um determinado valor no momento da execução de um método HTTP.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```64  \nAs opções disponíveis na API para interagir com um serviço são:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### cookie(nome, valor)  \nAdiciona um cookie na requisição HTTP.  \n#### cookie(nome, valor, caminho, domínio, versão)  \nAdiciona um cookie na requisição HTTP informando também o caminho/path, domínio e versão do cookie.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### cookie(Mapa[nome, valor])  \nAdiciona um ou vários cookies (nome/valor) na requisição HTTP com base em uma mapa.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```65  \n#### cabecalho(nome, valor)  \nAdiciona um cabeçalho/header na requisição HTTP.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### cabecalho(nome, lista de valores)  \nAdiciona um cabeçalho/header com vários valores na requisição HTTP.  \n#### cabecalho(Mapa[nome, valor])  \nAdiciona um ou vários cabeçalhos/headers (nome/valor) na requisição HTTP com base em uma mapa.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```66  \n**Parâmetros e caminhos**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Para permitir que um mesmo serviço atenda as mais diversas situações encontradas em APIs HTTP, as funções caminho() e parametro() possuem um comportamento diferenciado das demais. Estas funções quando executadas criam uma cópia da requisição atual",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "executadas criam uma cópia da requisição atual adicionado os respectivos parâmetro(s)/caminho(s). Desta forma a requisição original não é alterada e pode ser reutilizada para outras invocações no mesmo serviço.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Exemplo:  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```67  \n#### parametro(nome, valor)  \nCria uma cópia da requisição atual adicionando um parâmetro de query.  \n#### parametro(nome, lista de valores)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### parametro(nome, lista de valores)  \nCria uma cópia da requisição atual adicionando um ou mais parâmetros de query na requisição.  \n#### parametro(Mapa[nome, valor])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### parametro(Mapa[nome, valor])  \nCria uma cópia da requisição atual adicionando um ou mais parâmetros de query na requisição com base no mapa informado no parâmetro.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```68  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```69  \n#### caminho(caminho)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```69  \n#### caminho(caminho)  \nCria uma cópia da requisição atual adicionando um caminho/path na URL corrente.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```70  \n#### aceitarTipoMidia(midias)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```70  \n#### aceitarTipoMidia(midias)  \nInforma qual tipo de mídia é aceito pela requisição. O valor padrão é Http.TODOS.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```71  \nA API conta com algumas constantes para os tipos de mídia comuns:  \n* Http.JSON: _application/json_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Http.JSON: _application/json_\n* Http.XML: _application/xml_\n* Http.TEXTO_XML: _text/xml_\n* Http.XHTML: _application/xhtml+xml_\n* Http.TEXTO_HTML: _text/html_\n* Http.TEXTO: _text/plain_\n* Http.FORMULARIO: _application/x-www-form-urlencoded_",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* Http.MULTIPART: _multipart/form-data_\n* Http.ARQUIVO: _application/octet-stream_\n* Http.TODOS: _*/*_\n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```72  \n#### credenciais(usuario, senha)  \nConfigura a autenticação básica HTTP no serviço.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```73  \n#### tempoLimite(valor)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```73  \n#### tempoLimite(valor)  \nDefine o tempo limite para requisições executadas a partir do serviço. O valor deve ser informado em milissegundos.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```74  \n#### GET (Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```74  \n#### GET (Mapa[marcadores])  \nExecuta uma chamada do tipo GET ao serviço retornando uma representação de resposta.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```75  \n#### OPTIONS (Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### OPTIONS (Mapa[marcadores])  \nExecuta uma chamada do tipo OPTIONS ao serviço retornando uma representação de resposta.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```76  \n#### HEAD (Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```76  \n#### HEAD (Mapa[marcadores])  \nExecuta uma chamada do tipo HEAD ao serviço retornando uma representação de resposta.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```77  \n#### TRACE (Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```77  \n#### TRACE (Mapa[marcadores])  \nExecuta uma chamada do tipo TRACE ao serviço retornando uma representação de resposta.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```78  \n#### DELETE ()  \n#### DELETE (Mapa[marcadores])  \n#### DELETE (dados, Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### DELETE (dados, Mapa[marcadores])  \n#### DELETE (dados, Tipo de mídia)  \n#### DELETE (dados, Tipo de mídia, Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Executa uma chamada do tipo DELETE ao serviço retornando uma representação de resposta. Os dados da requisição são enviados conforme tipo de mídia informado no parâmetro sendo Http.JSON (_application/json_) o valor padrão.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```79",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```79  \n#### POST (dados)  \n#### POST (dados, Mapa[marcadores])  \n#### POST (dados, Tipo de mídia)  \n#### POST (dados, Tipo de mídia, Mapa[marcadores])  \n#### POST (formulário)  \n#### POST (formulário, Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Executa uma chamada do tipo POST ao serviço retornando uma representação de resposta. Os dados/formulário da requisição são enviados conforme tipo de mídia informado no parâmetro sendo Http.JSON (_application/json_) o valor padrão.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```80  \n#### PUT (dados)  \n#### PUT (dados, Mapa[marcadores])  \n#### PUT (dados, Tipo de mídia)  \n#### PUT (dados, Tipo de mídia, Mapa[marcadores])  \n#### PUT (formulário)  \n#### PUT (formulário, Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Executa uma chamada do tipo PUT ao serviço retornando uma representação de resposta. Os dados/formulário da requisição são enviados conforme tipo de mídia informado no parâmetro sendo Http.JSON (_application/json_) o valor padrão.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```81",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```81  \n#### PATCH (dados)  \n#### PATCH (dados, Mapa[marcadores])  \n#### PATCH (dados, Tipo de mídia)  \n#### PATCH (dados, Tipo de mídia, Mapa[marcadores])  \n#### PATCH (formulário)  \n#### PATCH (formulário, Mapa[marcadores]",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Executa uma chamada do tipo PATCH ao serviço retornando uma representação de resposta. Os dados/formulário da requisição são enviados conforme tipo de mídia informado no parâmetro sendo Http.JSON (_application/json_) o valor padrão.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```82  \n#### METODO (método)  \n#### METODO (Mapa[marcadores], método)  \n#### METODO (método, dados)  \n#### METODO (método, dados, Mapa[marcadores])  \n#### METODO (método, tipo de mídia)  \n#### METODO (método, dados, tipo de mídia)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### METODO (método, dados, tipo de mídia)  \n#### METODO (método, dados, tipo de mídia, Mapa[marcadores])  \n#### METODO (formulário)  \n#### METODO (formulário, Mapa[marcadores]",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A função METODO é utilizada para realizar chamadas utilizando métodos personalizados. Tem como retorno uma representação de resposta. Os dados/formulário da requisição quando existentes são enviados conforme tipo de mídia informado no parâmetro",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "conforme tipo de mídia informado no parâmetro sendo Http.JSON (_application/json_) o valor padrão.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```83  \n#### Formulários  \nPara permitir o uso de serviços web onde os dados são recebidos no formato de formulários (form), a API conta com os seguintes facilitadores:  \n##### Formulario",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Para criar um novo formulário de dados deve-se utilizar as funções **criarFormulario()** ou **criarFormulario(tipo de mídia formulário)**. Estas funções criam um novo formulário utilizando como tipo de mídia o valor Http.FORMULARIO",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "como tipo de mídia o valor Http.FORMULARIO (application/x-www-form-urlencoded). A mídia pode ser alterada informando no parâmetro da função o tipo de mídia desejada.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```84  \n###### parametro(nome, valor)  \nAdiciona um parâmetro ao formulário atual.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```85  \n###### parametro(Mapa[nome, valor])  \nAdiciona um ou mais parâmetros ao formulário atual bom base em uma mapa.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```86",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```86  \n###### POST()  \n###### POST(Mapa[marcadores])  \nEnvia o formulário utilizando como tipo de método o verbo POST.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```87  \n###### PUT()  \n###### PUT(Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### PUT()  \n###### PUT(Mapa[marcadores])  \nEnvia o formulário utilizando como tipo de método o verbo POST.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```88  \n###### PATCH()  \n###### PATCH(Mapa[marcadores])  \nEnvia o formulário utilizando como tipo de método o verbo POST.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```89  \n###### METODO(método)  \n###### METODO(método, Mapa[marcadores])  \nEnvia o formulário utilizando como tipo de método um valor personalizado.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```90  \n##### Formulario Multipart",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Para criar um novo formulário multipart deve-se utilizar as funções **criarFormularioMultipart()** ou **criarFormularioMultipart(tipo de mídia formulário)**. Estas funções criam um novo formulário multipart utilizando como tipo de mídia o valor",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "multipart utilizando como tipo de mídia o valor Http.MULTIPART (multipart/form-data). A mídia padrão pode ser alterada informando no parâmetro da função o tipo de mídia desejada.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Formulários multipart geralmente são utilizados para envio de dados e arquivos (upload) em um requisição.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```91  \n###### parametro (nome, valor)  \n###### parametro (nome, valor, tipo de mídia)  \n###### parametro (Mapa[nome:valor])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### parametro (Mapa[nome:valor])  \n###### parametro (Mapa[nome:valor])  \nAdiciona um ou mais parâmetro(s) ao formulário atual. Este parâmetro pode conter um tipo de mídia diferente ao do formulário.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```92  \n###### POST()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```92  \n###### POST()  \n###### POST(Mapa[marcadores])  \nEnvia o formulário utilizando como tipo de método o verbo POST.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```93  \n###### PUT()  \n###### PUT(Mapa[marcadores])",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### PUT()  \n###### PUT(Mapa[marcadores])  \nEnvia o formulário utilizando como tipo de método o verbo PUT.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```94  \n###### PATCH()  \n###### PATCH(Mapa[marcadores])  \nEnvia o formulário utilizando como tipo de método o verbo PATCH.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```95  \n###### METODO(método)  \n###### METODO(método, Mapa[marcadores])  \nEnvia o formulário utilizando como tipo de método um valor personalizado.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```96  \n### Resposta",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```96  \n### Resposta  \nUma chamada à um serviço web quando executada tem como retorno uma representação de resposta. Esta resposta pode ser processada/lida de maneiras distintas conforme necessidade.  \nAs opções disponíveis são:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "As opções disponíveis são:  \n#### codigo()  \nRetorna o código HTTP da resposta.  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```97  \n#### tipoMidia()  \nRetorna o tipo de mídia da resposta  \n```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```98  \n#### ehJson()  \nIndica se o tipo de mídia da resposta é do tipo JSON",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\npercorrer(de:3, ate:5){ idPrincipal ->\nimprimir idPrincipal\npercorrer(de:6, ate:8){ idSecundario ->\nimprimir 'ID princial: ' + idPrincipal\nimprimir 'ID secundário: ' + idSecundario\n}\n}\n```99  \n#### sucesso()  \nIndica se o código resposta é considerado como sucesso segundo o padrão HTTP.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```00  \n#### tamanho()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```00  \n#### tamanho()  \nRetorna o tamanho do conteúdo segundo o cabeçalho da resposta (Content-Length) recebido. Caso o valor não seja retornado pelo servidor ou seja inválido retorna -1.  \n#### contemResultado()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### contemResultado()  \nIndica se a requisição retornou algum resultado. Esta verificação é realizada com base no conteudo() e no tamanho() da mensagem e pode ou não estar presente dependendo de cada serviço utilizado.  \n#### ultimaModificacao()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### ultimaModificacao()  \nRetorna a data da ultima modificação do resultado. Este valor é obtido do resultado da requisição e pode ou não estar presente dependendo de cada serviço utilizado.  \n#### cookie(nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### cookie(nome)  \nRecupera um cookie da resposta com base no nome. Um cookie pode conter as seguintes informações:  \n* **nome()** : Nome do cookie\n* **valor()** : Valor do cookie\n* **valorCodificado()** : Valor do cookie codificado no padrão URL",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **valorDecodificado()** : Valor do cookie no padrão URL decodificado\n* **caminho()** : Caminho/Path do cookie\n* **dominio()** : Domínio do cookie\n* **versao()** : Versão do cookie (número)\n* **comentario()** : Comentário do cookie",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **comentario()** : Comentário do cookie\n* **idadeLimite()** : Idade limite/tempo de duração do cookie (maxAge)\n* **expira()** : Data de expiração do cookie\n* **ehSeguro()** : Indica se é seguro\n* **ehSomenteHttp()** : Indica se é somente HTTP",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **ehSomenteHttp()** : Indica se é somente HTTP\n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```01  \n#### contemCookie(nome)  \nIndica se a resposta contém um cookie com o nome informado no parâmetro.  \n#### cookies()  \nRecupera uma lista contendo os cookies retornados na resposta.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```02  \n#### cabecalho(nome)  \nRecupera um cabeçalho(Header) da resposta com base no nome. Um cabeçalho poder conter as seguintes informações:  \n* **nome()** : Nome do cabeçalho",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **nome()** : Nome do cabeçalho\n* **valores()** : Uma lista contendo todos os valores do cabeçalho\n* **valor()** : O primeiro valor encontrado do cabeçalho\n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```03  \n#### contemCabecalho(nome)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```03  \n#### contemCabecalho(nome)  \nIndica se a resposta contém um cabeçalho (Header) com o nome informado no parâmetro.  \n#### cabecalhos()  \nRecupera uma lista contendo os cabeçalhos retornados na resposta.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```04",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```04  \n#### cookie(nome)  \nRetorna o cookie (caso definido)  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```05  \n#### imprimir()  \nImprime o conteúdo da resposta no console do editor de scripts.  \n#### conteudo()  \nRetorna o conteúdo da resposta no formato de caracteres.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```06  \n#### arquivo()  \nRetorna uma fonte de arquivo que contém o conteúdo da resposta. Esta opção deverá ser utilizada em conjunto com as demais APIs da engine de scripts.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```07  \n#### json()",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```07  \n#### json()  \nRetorna o resultado de uma serviço JSON como Mapa/Lista de mapa.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```08",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A assinatura de um documento por meio do script pode ser feita por arquivo ou por lote, apenas documentos xml e pdf podem ser assinados. Todo processo de assinatura envolve a criação de dois scripts, um para chamada da api de assinatura e outro de",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "um para chamada da api de assinatura e outro de callback que é executado após a assinatura e pode receber o arquivo assinado e o arquivo original como parâmetro.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **Observação:** Para assinar qualquer documento, é necessário que a ferramenta de assinatura esteja rodando na maquina do usuário.\n### Assinando Documento  \nExemplo de script de assinatura de um documento pdf:  \n###### assinar(arquivo, opcoes)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### assinar(arquivo, opcoes)  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```09  \nExemplo de script de assinatura de um documento xml:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```10  \n### Assinando lote de documentos  \nExemplo de script de assinatura de um lote de documentos xml:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### assinar(arquivo, opcoes)  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```11  \n### Múltiplos assinantes  \nExemplo de script de assinatura de um documento PDF com múltiplos assinantes:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **Observação:** Apenas documentos do tipo PDF podem utilizar o recurso de múltiplos assinantes.\n###### assinar(arquivo, opcoes)  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```12  \n### Script de callback",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```12  \n### Script de callback  \nO script de callback é o script executado automaticamente após o a execução do script que chama a api de assinatura com Assinador.assinar(arquivo, opcoes).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Com base no script de assinatura do exemplo anterior, o script de callback deve ter dois parâmetros do tipo arquivo, que são:  \n* **assinado** que foi definido no script de assinatura no item retorno.parametro do objeto de opcoes",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* **original** que também foi definido no script de assinatura no item parametros do objeto de opcoes\nE por último o identificador que também foi definido no script de assinatura no item script do objeto de opcoes  \n## API de Critério",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "## API de Critério  \n### Criação  \nA criação de um novo critério acontece das seguintes maneiras:  \n###### Iniciando uma expressão  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```13",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### Iniciando uma expressão  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```13  \nEsse é o caso mais comum, onde a configuração padrão do critério já atende. Através dessa forma, o critério é criado já se iniciando uma expressão.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```14  \n###### Configurando o critério",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```14  \n###### Configurando o critério  \nConfiguração de parâmetro obrigatório:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```15  \nConfiguração padrão:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```16",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Configuração padrão:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```16  \nAceita um template que vai ser utilizado na geração da mensagem de erro quando um parâmetro de uma condição não tiver seu valor informado:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```17",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```17  \nPor padrão, os valores utilizados como parâmetros, são opcionais, e caso seu valor seja nulo, a expressão é desconsiderada na geração do filtro:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```18  \nO critério a acima geraria o seguinte filtro:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```19",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```19  \n### Operações  \nApós a criação do critério, é possível fazer uso um conjunto de operações de comparação.  \n###### Operações de comparação  \n* igual(valor)\n* diferenteDe(valor)\n* maiorQue(valor)\n* maiorOuIgualQue(valor)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* maiorQue(valor)\n* maiorOuIgualQue(valor)\n* menorQue(valor)\n* menorOuIgualQue(valor)\n* ehNulo() `nome is null`\n* naoEhNulo() `nome is not null`\n* ehVerdadeiro() `responsavel is true`\n* ehFalso() `responsavel is false`",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* ehFalso() `responsavel is false`\n* naoEhVerdadeiro() `responsavel is false`\n* naoEhFalso() `responsavel is true`\n* comecaCom(valor) `nome like \"P%\"`\n* naoComecaCom(valor) `nome not like \"P%\"`\n* terminaCom(valor) `nome like \" %P\"`",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* terminaCom(valor) `nome like \" %P\"`\n* naoTerminaCom(valor) `nome not like \" %P\"`\n* contem(valor) `nome like \"%João%\"`\n* naoContem(valor) `nome not like \"%João%\"`\n* contidoEm(valores) `nome in (\"João\", \"Maria\")`",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* contidoEm(valores) `nome in (\"João\", \"Maria\")`\n* naoContidoEm(valores) `nome not in (\"João\", \"Maria\")`\nExemplo de utilização:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```20  \n#### Obrigatoriedade dos valores",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Obrigatoriedade dos valores  \nCaso seja necessário configurar a obrigatoriedade dos valores de forma pontual, é possível configurar em qualquer operação que aceite um valor como parâmetro:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```21",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```21  \nQuando se configura a obrigatoriedade para todos os parâmetros do critério, a propriedade se chama **parametros**. Porém quando é configurado a nível de operação, se chama **parametro**.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Delimitador nas operações contidoEm/naoContidoEm  \nPara as operações **contidoEm** e **naoContidoEm** pode ser informado um delimitador para os valores que não são String.  \n#### Com delimitador  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```22",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Com delimitador  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```22  \nO critério acima, gera o seguinte filtro:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```23  \n#### Sem delimitador  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```24  \nO critério acima, gera o seguinte filtro:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```25  \n#### Com formatação e delimitador",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Com formatação e delimitador  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```26  \nO critério acima, gera o seguinte filtro:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```27  \n### Filtros compostos  \nOs filtros podem ser utilizados de forma composta, fazendo uso do **e** ou do **ou** :  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```28",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```28  \nO critério acima, gera o seguinte filtro:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```29  \n### Agrupamento  \nO critério tem suporte a **grupos** , através da seguinte chamada:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```30  \nO critério acima, gera o seguinte filtro:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```31",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```31  \n### Datas  \nAtualmente a engine de scripts tem suporte a **datas** através de seu formato completo (data e hora), e no critério ela é representada através do formato [ISO 8601](https://pt.wikipedia.org/wiki/ISO_8601)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```32  \nO critério acima, gera um filtro parecido com:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```33  \nCaso queira submeter a data no filtro utilizando outros formatos, as seguintes opções estão disponíveis:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Informar uma das formatações pré-definidas (data e hora)  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```34  \nOs critérios acima, geram os seguintes filtros:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```35  \n#### Informar uma formatação customizada  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```36  \n## API de Execução",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```36  \n## API de Execução  \nO bfc-script disponibiliza uma API para a consulta das informações relacionadas a execução.  \n#### Consultar o protocolo da execução  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```37  \n#### Consultar se a execução foi cancelada pelo usuário",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```38  \n### Exemplos  \nMonitorar o cancelamento e interromper a execução:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```39  \n## API de Cache",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "## API de Cache  \nO bfc-script disponibiliza uma API para armazenar valores pequenos em cache (máximo de 10kb), como dados de autenticação de serviços externos. O valor é armazenado usando o contexto de sistema, database e entidade.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Cache.adicionar(chave, valor)  \nAdiciona um novo valor no cache, com a chave informada e o tempo de expiração padrão de 12 horas.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```40  \n#### Cache.adicionar(chave, valor, expirarEm)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Cache.adicionar(chave, valor, expirarEm)  \nAdiciona um novo valor no cache, com a chave informada e o tempo de expiração (opicional).  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```41  \n#### Cache.recuperar(chave, valorPadrao)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Cache.recuperar(chave, valorPadrao)  \nRecupera um valor colocado previamente no cache, ou retorna o valor padrão.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```42  \n#### Cache.contem(chave)  \nVerifica se o cache ontem algum valor para a chave informada.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Cache.remover(chave)  \nRemove o valor para chave informada.  \n## Integrando com uma aplicação  \nO bfc-script pode ser integrado em qualquer aplicação Java SE ou EE.  \n### Configurando a aplicação",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Configurando a aplicação  \nA configuração pode variar de acordo com a stack utilzada.  \n#### Stack Dubai  \nO bfc-script esta disponível desde a versão 1.7.0 da stack.  \nDeve-se mapear as seguintes dependências:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```43",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```43  \nPara projetos web, não é necessário mapear a dependência bfc-rest-script.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Em projetos que possuem explicitamente o uso do cglib, ou alguma dependência que o utiliza, é necessário remove-la do projeto, para não gerar conflito com o bfc-script.  \n### Executando um script",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Executando um script  \nA execução de scripts em uma aplicação ocorre pela utilização da API do bfc-script. A classe ScriptManager contem os métodos necessários para executarmos nossos scripts, isso pode ser feito de duas formas:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "1 - Para executarmos um script literal, basta utilizarmos o método evaluate da classe ScriptEngineContext conforme veremos abaixo.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```44",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "2 - Porem em um ambiente real, nossos scripts não estarão transcritos estaticamente no código, conforme vimos no exemplo acima, mas estarão armazenados em um banco de dados, havendo a possibilidade desses serem editados a qualquer momento.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O armazenamento dos scripts deve ser realizado pela aplicação, que deverá apenas implementar uma interface de acesso ao script, para que a engine saiba como resgata-lo durante a execução. É indicado que a aplicação possua uma tabela para",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "É indicado que a aplicação possua uma tabela para armazenamento de scripts independente do caso de uso, onde esta se relacionará com a tabela que representa o caso de uso.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Vejo o exemplo das tabelas abaixo:  \nA tabela SCRIPTS armazena scripts de qualquer natureza.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```45",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```45  \nA tabela EVENTOS representa possíveis eventos do cálculo da folha de pagamento, onde cada evento tem respectivamente um script. Esta tabela é aplicavel para o caso de uso calculo da folha.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```46",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A tabela CRITICAS_USUARIOS representa possíveis critérios de validação configurados pelo usuário final. As criticas podem ser definidas para diversos cadastros, onde para cada crítica há um script. Esta tabela é aplicavel para o caso de uso críticas",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "tabela é aplicavel para o caso de uso críticas de usuário.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```47  \nEmbora as tabelas EVENTOS e CRITICAS_USUARIOS representam casos de usos distintos, a tabela SCRIPTS, armazena scripts de ambas naturezas.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "No momento da execução dos scripts, a aplicação deve informar o id do script persistido, onde a engine se encarregará de carregar o script do banco de dados, compilar e executar. A engine ainda controla todo mecanismo de cache e reload de scripts,",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "todo mecanismo de cache e reload de scripts, caso esses tenham sido alterados.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Digamos que o script abaixo esta armazenado na tabela SCRIPTS e o seu id é 25.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```48  \nPara executarmos o script acima, basta invocar o método run passando o id do script por parâmetro.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```49",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```49  \nA engine carregará o script do banco de dados, compilará, executará e armazenará o script compilado em cache para ser usado posteriormente.  \n##### Stack Dubai",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Os scripts devem ser persistidos no banco da própria aplicação. Para execução de um script é necessário definir a entidade JPA que representa o script bem como seu respectivo repositório, estendendo as seguintes classes,",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "repositório, estendendo as seguintes classes, com.betha.bfc.script.engine.standard.AbstractScript e com.betha.bfc.script.engine.standard.AbstractScriptRepository.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Segue um exemplo de implementação da entidade Script e seu repositório, estendendo as devidas classes:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```50\n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```51",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```50\n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```51  \nA classe AbstractScript, contém o método execute, que possibilita sua execução a partir de um contexto no o ambiente de produção para engine padrão:  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```52  \n#### Passando parâmetros para um script",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Passando parâmetros para um script  \nPara passar informações para nossos scripts, precisamos seta-las como variáveis dentro da engineContext. Observe o script abaixo. Daremos um id à este script, 30.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```53",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```53  \nExecutamos o script acima passando o id do script para o método run.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```54",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```54  \nO script de código 30 utiliza uma variável chamada valorSalarioHora para efetuar um calculo, esta variável é setada no momento da execução desse script, conforme vimos acima.  \n##### Beans",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### Beans  \nÉ possível ainda passar um objeto como parâmetro. Este objeto deve seguir as convenções JavaBean, como seus atributos privados e métodos de leitura e gravação.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```55",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```55  \nExecutamos o script acima, porem precisamos passar uma instância de uma classe Funcionario como podemos ver abaixo.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```56",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```56  \nObjetos passados por parâmetros podem ser simples pojos bem como, objetos que realizam acesso a um banco de dados, etc.  \n##### Coleções",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### Coleções  \nPodemos passar coleções de JavaBeans. O comando percorrer itera coleções e disponibiliza uma variável implícita que representa o item iterado chamada **item**.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```57",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```57  \nExecutamos o script acima passando uma instância de classe que implemente a interface java.util.Collection ou alguma de suas subclasses. É necessário que os objetos dentro da coleção sejam JavaBeans.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```58",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```58  \n##### NullsafeProxy",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A engine por padrão, não permite que valores nulos sejam utilizados dentro dos scripts. Caso tentar passar um parâmetro nulo como variável, a engine irá disparar um NullpointerException e caso alguma propriedade dentro de um JavaBean estiver nula,",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "propriedade dentro de um JavaBean estiver nula, mesmo que este bean esteja dentro de uma coleção, este atributo assumira um valor padrão:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* 0 para números,\n* vazio para caracteres\n* 01/01/1800 para datas",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A engine encapsula os objetos complexos passados como variáveis em um nullsafeProxy. Este proxy atua recursivamente para qualquer possível atributo de tipo complexo, encapsulando este também como um nullsafeProxy. É importante que classes dos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "um nullsafeProxy. É importante que classes dos objetos passados por parâmetro para um script, não sejam final e possuam um construtor público.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Esse comportamento pode ser desabilitado de duas maneiras.  \n###### @NoProxy  \nÉ possível anotar uma classe com @NoProxy, onde esta não herdará o comportamento NullSafeProxy.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```59  \nFuncionario funcionario = new Funcionario();",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Funcionario funcionario = new Funcionario();  \nengineContext.setVariable(funcionario, funcionario);  \n###### $nullSafe",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "###### $nullSafe  \nÉ possível setar uma variável para desabilitar o comportamento NullSafeProxy para um contexto por setar uma variável boleana atribuída à chave $nullSafe.  \nengineContext.setVariable($nullSafe, false);",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "engineContext.setVariable($nullSafe, false);  \nFuncionario funcionario = new Funcionario();  \nengineContext.setVariable(funcionario, funcionario);  \n##### Anotações",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "##### Anotações  \nCom o objetivo de simplificar a manipulação de variáveis injetadas em um script e ainda trazer mais integridade, é possível utilizar anotações.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```60",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```60  \nA classe VariaveisScriptFolha por exemplo, relaciona todas as variáveis que devem ser injetadas na execução do script de um suposto processo de calculo da folha.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A anotação @ScriptInjectable qualifica a classe como portadora de atributos passíveis de serem injetados em um script. A anotação @ScriptInjectable.Variable, marca um atributo da classe, para ser escaneado e o configura como uma variável em um",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "escaneado e o configura como uma variável em um script. O atributo name, define o nome que será utilizado para a variável no script. Se o valor do atributo não for setado, será utilizado como nome da variável dentro do script, o próprio nome do",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "da variável dentro do script, o próprio nome do atributo com a anotação @ScriptInjectable.Variable.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Para setar na engine as variáveis baseadas na configuração da classe VariaveisScriptFolha, é necessário antes, submeter a instancia da classe para o utilitário Injectables.byAnnotation, retornando uma instância de Injectables, que poderá ser setado",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "instância de Injectables, que poderá ser setado no contexto, conforme o exemplo abaixo:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```61  \n##### Metadados",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "As anotações possuem duplo propósito, configuração de variáveis a serem injetadas em um script e coleta de meadados, utilizados para construção do ambiente de desenvolvimento de um script para o usuário final, onde o usuário precisará conhecer quais",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "final, onde o usuário precisará conhecer quais variáveis estão disponíveis, bem como outros detalhes, como parâmetros, retornos e documentação.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```62\n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```63  \nEssa configuração não é recursiva, suportando apenas o primeiro nível, a partir da classe com a anotação @ScriptInjectable.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "É possível configurar a forma como o usuário vai interagir com uma variável. Podemos configurar uma variável como uma classe de funções, que na pratica, apenas altera a forma como o usuário visualizará a variável em tempo de desenvolvimento.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```64  \n#### Obtendo dados de um script",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Em alguns casos iremos precisar obter o retorno de um script ou o valor de alguma variável específica. A engine fornece métodos para a obtenção de variáveis registradas dentro da engine ou ainda para recuperar os dados de retorno de um script.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Observe o script abaixo cujo o id é 30.  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```65",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "No exemplo acima estamos utilizando a variável injetada **valorSalarioHora** para fazermos um suposto calculo salarial. Criamos a variável **nomeFuncionario** , e atribuímos o nome para o funcionário e utilizamos o comando retornar para submetermos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "e utilizamos o comando retornar para submetermos estes dados como valor de retorno para o script, atribuindo uma chave para cada valor. Estes valores serão resgatados através de uma java.util.Map como veremos abaixo.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```66",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Todo script executado gera um retorno. Este tipo de retorno precisa ser previamente reconhecido pelo executor do script, pois será necessário fazer um cast para obtermos o valor de retorno. Para o exemplo acima, o retorno é obtido através de um",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "o exemplo acima, o retorno é obtido através de um mapa, através das chaves previamente reconhecidas, obtemos os valores requeridos.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Podemos resgatar os valores das variáveis de outra forma. Para o script executado acima, existem duas outras variáveis declaradas que não foram submetidas ao comando retornar, poderíamos passar elas normalmente para o comando, assim como fizemos com",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "para o comando, assim como fizemos com as variáveis salario e nome, ou podemos recuperar seus valores conforme veremos abaixo:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```67",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A classe Result fornece um método para obtermos as variáveis usadas dentro do script. Através do método getVariable, podemos resgatar qualquer variável registrada no script, inclusive aquelas que submetemos ao comando retornar. Devido ao uso de",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "submetemos ao comando retornar. Devido ao uso de generics no retorno do método getVariable, não precisamos fazer o cast para o tipo requerido, pois o cast é feito implicitamente.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Entendo Contextos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "As aplicações possuem apenas uma instância de uma determinada engine. Isso possibilita compartilhar scripts carregados e já compilados em outras execuções, diminuindo o custo de execução dos scripts utilizados por outros processos. Porem é",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "scripts utilizados por outros processos. Porem é necessário que durante a execução dos scripts exista isolamento, para que uma execução não gere efeitos colaterais em outras.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Embora exista apenas uma instância da engine para uma aplicação, a execução dos scripts é dividida por contextos. Os contextos garantem que os dados envolvidos na execução de um script, como parâmetros passados para o script, instância de classes e",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "passados para o script, instância de classes e outros recursos, estejam restritos a execução corrente, não influenciando execuções paralelas.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Por outro lado, um contexto permite o compartilhamento de informações durante o seu tempo de vida. Podemos executar um número ilimitado de scripts em um único contexto, sendo útil quando precisamos passar os mesmos parâmetros para vários scripts a",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "passar os mesmos parâmetros para vários scripts a serem executados ou manter um estado entre eles.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Devemos ter em mente que o estado dos objetos possuem escopo de contexto, qualquer modificação de um atributo será compartilhado a todos os scripts executados dentro de um mesmo contexto, possibilitando por exemplo, agrupar informações entre várias",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "por exemplo, agrupar informações entre várias execuções conseguintes ou trocar informações entre scripts.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Manter o escopo reduzido a um contexto de execução pode ser perigoso quando utilizado de maneira involuntária, compartilhando por exemplo, um escopo entre várias execuções sem o conhecimento do ciclo de vida da engine de script.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "## Ambiente de desenvolvimento - Editor de script",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O editor de scripts fornece uma forma amigável para codificação de scripts que serão compilados e executados pela engine. A responsabilidade sobre a validação da sintaxe, compilação, execução de scripts e geração de informações relacionadas a erros",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "e geração de informações relacionadas a erros de compilação são geridos inteiramente pela engine.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Stack Dubai  \n[Configuração front-end](frontend.html)  \n[Configuração back-end](backend.html)  \n## O projeto",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Atualmente a maioria dos softwares foram desenhados para operar nos data-centers das empresas, com contratos e licenças específicas. Porem em um ambiente cloud, onde aplicações podem ser oferecidas como serviço, é necessário que todos os recursos",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "como serviço, é necessário que todos os recursos computacionais sejam compartilhados. Clientes precisarão adaptar a aplicação às suas características específicas, e é necessário garantir que as particularidades de cada um não impactem em alterações",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "de cada um não impactem em alterações de software e não gerem conflito à outros clientes.,",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A Betha através do projeto cloud, esta adaptando sua infraestrutura web para fornecer aos seus clientes, soluções compatíveis com o este novo paradigma tecnológico, que emergiu junto com o conceito de cloud computer. O bfc-script é uma parte",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "de cloud computer. O bfc-script é uma parte importante deste novo modelo, e irá se integrar com outras soluções subseqüentes. Ele possibilitará que as aplicações sejam personalizadas através de scripts de usuário e ainda que os sistemas FolhaRh e",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "de usuário e ainda que os sistemas FolhaRh e Tributos, que fazem uso de scripts de customização, sejam migrados para o ambiente web.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Arquitetura  \nO bfc-script foi projetado para ser intergrado à aplicações Java SE e EE. O framework centraliza toda sua especificação em um módulo core, possibilitando a criação de diversas engines dentro de um mesmo ambiente de execução.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "![Arquitetura](images/script-arquitetura.png)  \n#### A engine de execução",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Foi estudado a viabilidade de se implementar uma engine de execução para o bfc-script, porém, foi constatado que existem diversas engines disponíveis para JVM, algumas amplamente utilizadas pela comunidade. Após uma primeira avaliação, foram",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "comunidade. Após uma primeira avaliação, foram elencadas 3 engines para testes: Jruby (Ruby), Rhino (Java Script) e Groovy (Mix Java/Ruby).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Os principais requisitos para a seleção de uma engine eram: tipagem dinamica, boa performance, favorecer a criação de DSLs. A engine do groovy foi a que melhor preencheu estes requisitos, se tornando a engine de execução do bfc-script.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "#### Registro de engines",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Várias engines podem ser registradas em um mesmo ambiente de execução. Isso poderá ser útil caso seja necessário criar engines que resgatam scripts de lugares específicos, ou que ainda precisem restringir ou liberar recursos específicos. As engines",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "ou liberar recursos específicos. As engines são registradas através do mecanismo de service/lookup do java. O ScriptManager faz lookup das engines registradas no classpath, através de uma identificação atribuida à engine no momento em que esta é",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "atribuida à engine no momento em que esta é registrada, constituida por um nome e um Environment (**PRODUCTION** ou **DEVELOPMENT**). Portanto podemos ter duas engines com o mesmo nome mas para ambientes diferentes. O Environment possibilita que as",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "diferentes. O Environment possibilita que as engines implementem caracteristicas desejáveis para os ambientes distintos, sendo estas caracteristicas perceptiveis na compilação e execução do scripts.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Para maioria dos casos de uso não será necessário criar uma engine e sim utilizar a engine engine padrão.  \n#### Engine padrão",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A engine de execução padrão foi desenvolvida para dar suporte às necessidades de praticamente todas as aplicações da Betha. A engine permite que pacotes de funções utilitárias sejam plugados, personalizando o box de funções utilitárias da engine",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "o box de funções utilitárias da engine para um caso de uso desejado.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A engine padrão, possui um conjunto de funções utilitárias para manipulação de datas, caracteres, números, e também instruções de iteração e condicionais, que definem a linguagem e utilitários da engine.  \n### Groovy",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Ao contrário do Microsoft .Net, Java (linguagem e plataforma) não foi criada visando o uso de várias linguagens para gerar código interpretado (bytecodes em Java, MSIL - Microsoft Intermediate Language - em .Net). Com os anos, a comunidade Java",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "- em .Net). Com os anos, a comunidade Java criou suas próprias ferramentas para compensar este fato, na forma de linguagens que geram bytecodes compatíveis com os produzidos pelo compilador da linguagem Java. Groovy é uma destas linguagens, talvez a",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Java. Groovy é uma destas linguagens, talvez a mais conhecida. É um projeto de Software Livre hospedado na Codehaus responsável por outros projetos como XStream, Pico/Nano Container, AspectWerkz, ActiveMQ, JMock, Drools e tantos outros. A linguagem",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "JMock, Drools e tantos outros. A linguagem Groovy é padronizada pela JSR 241.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O grande foco de Groovy é a produção de scripts, como os feitos em Bash ou Perl, mas a linguagem é poderosa o suficiente para ir muito além. Alguns programas podem exigir que rotinas sejam configuráveis e a maioria dos grandes sistemas empresariais,",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "e a maioria dos grandes sistemas empresariais, como ERPs e outros sistemas vendidos como produtos, permite um alto nível de personalização por cliente. Imagine um software de frente de caixa que precisa aceitar promoções definidas pelo time de",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "precisa aceitar promoções definidas pelo time de marketing várias vezes por ano.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Na maioria das vezes estas configurações são implementadas com algum nível de parametrização em arquivos de configuração, mas quando existe uma mudança grande (como uma promoção compre dois produtos do lote ABC-001 e leve mais um) geralmente o",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "do lote ABC-001 e leve mais um) geralmente o desenvolvedor precisa codificar esta em Java e fazer outro deploy da aplicação.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Fonte: [Groovy: Linguagem de Script para Java](http://www.fragmental.com.br/wiki/index.php?title=Groovy:_Linguagem_de_Script_para_Java#Integr.C3.A1vel_a_um_Programa_Java)  \nMais informações:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Mais informações:  \n[Wikipedia Groovy](http://pt.wikipedia.org/wiki/Groovy)  \n[Codehaus](http://groovy.codehaus.org/)  \n### Linguagens de Script para JVM",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Quem tem acompanhado as ferramentas de desenvolvimento de software durante a última década sabe que o termo Java se refere a um par de tecnologias: a linguagem de programação Java e do Java Virtual Machine (JVM). A linguagem Java é compilada em",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Machine (JVM). A linguagem Java é compilada em bytecodes que são executados na JVM. Através deste projeto, Java oferece a sua portabilidade como grande diferencial.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "A linguagem e a JVM, no entanto, têm caminhado cada vez mais em direções opostas. A linguagem tornou-se mais complexa, enquanto a JVM se tornou uma das plataformas de execução mais rápida e eficiente disponível. Em muitos benchmarks, Java iguala o",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "disponível. Em muitos benchmarks, Java iguala o desempenho do código binário gerado por linguagens compiladas como C e C + +. A crescente complexidade da linguagem e do notável desempenho, portabilidade e escalabilidade da JVM criaram uma abertura",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "e escalabilidade da JVM criaram uma abertura para uma nova geração de linguagens de programação. Essas linguagens oferecem possibilidades que carecem na linguagem Java, além de serem geralmente mais sucintas e objetivas.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Tecnólogos divergem sobre o que exatamente é uma linguagem de script. Na sua definição mais estrita, é uma linguagem que permite ao desenvolvedor escrever programas rápidos.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Fonte: [Top five scripting languages the jvm](http://www.infoworld.com/d/developer-world/top-five-scripting-languages-the-jvm-855?page=0,0)  \nMais informações:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Mais informações:  \n[Linguagens dinâmicas na JVM](http://www.slideshare.net/amsterdatech/linguagens-dinamicas-na-jvm)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "[Java Scripting Linguagens Interpretadas pelo java](http://www.slideshare.net/jeveaux/java-scripting-linguagens-interpretadas-pelo-java)  \n[List of Java Virtual Machines](http://en.wikipedia.org/wiki/List_of_Java_virtual_machines)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Linguagens de domínio especifico  \nArtigo no formato de perguntas e repostas formulado por [Martin Fowler](http://martinfowler.com/).  \n**O que é uma Domain Specific Language? (ou linguagem de domínio especifico, ou ainda DSL)**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Uma Domain Specific Language (DSL) é uma linguagem de programação de expressividade limitada, focada num domínio particular. A maioria das linguagens que você conhece são linguagens de propósito geral (General Purpose Languages), que podem lhe dar",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "(General Purpose Languages), que podem lhe dar com a maioria das coisas que você encontra durante um projeto de sistema. Cada DSL pode agir somente em um aspecto especifico do sistema.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Então você não poderia escrever todo projeto em uma DSL?**  \nNão. A maioria dos projetos irão usar uma linguagem de propósito geral e muitas DSLs.  \n**Essa idéia é nova?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Não totalmente. DSLs tem sido usadas extensamente nos círculos de usuários do Unix desde os primórdios desse sistema. A comunidade Lisp discute a criação de DSLs em Lisp e então usa a DSL para implementar a lógica. A maioria dos projetos de TI usam",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "a lógica. A maioria dos projetos de TI usam muitas DSLs – você já deve ter ouvido de coisas como CSS, SQL, expressão regular e etc.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Então porque este assunto está fazendo tanto barulho só agora?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Provavelmente é por causa do Ruby and Rails. Ruby é uma linguagem com muitas características que tornam fácil o desenvolvimento de DSLs e as pessoas que estão envolvidas na comunidade Ruby têm se sentido mais a vontades com essa abordagem, então",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "sentido mais a vontades com essa abordagem, então eles levam vantagem dessas características. Em particular o Rails usa muitas DSLs que o deixam mais fácil de usar. Isto, por sua vez, tem incentivado mais pessoas a seguir essas idéias. Outra razão é",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "mais pessoas a seguir essas idéias. Outra razão é que muitos sistemas feitos em Java ou C",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "# precisam ter muito de seu comportamento definido de forma mais dinâmica. Isto conduziu a arquivos XML complexos que são difíceis de compreender que, por sua vez, levou as pessoas a explorar DSLs novamente.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Então DSLs podem ser usadas com outras linguagens além do Ruby?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Sim, como eu já disse, as DSLs já estavam por ai há muito tempo, mais do que o Ruby. Ruby tem uma sintaxe não obstrutiva e também características de meta-programação que a torna mais fácil para criar elegantes DSLs internas, mais do que outras",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "criar elegantes DSLs internas, mais do que outras linguagens como C",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "# e Java. Mas existe DSLs internas uteis feitas em Java e C#  \n**Qual a diferença entre DSL interna e DSL externa?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Uma DSL interna é apenas um idioma particular de escrever código na linguagem hospedeira. Então uma DSL interna feita em Ruby é um código Ruby, escrito num estilo particular que deixa a linguagem mais próxima da linguagem hospede. Tais como elas",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "mais próxima da linguagem hospede. Tais como elas podem ser chamadas de Interface Fluente ou DSL embutida. Uma DSL externa é uma linguagem completamente separada que é traduzida para que a linguagem hospedeira possa entender.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Por que as pessoas estão interessadas nas DSLs?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Eu vejo que as DSLs possuem dois principais benefícios. O benefício mais comum é fazer que certos tipos de códigos fiquem mais fáceis de compreender, que se tornem mais fáceis de modificar, assim melhorando a produtividade do programador. Isto é",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "melhorando a produtividade do programador. Isto é válido para todos interessados e relativamente fácil de atingir. O benefício mais interessante, todavia, é que uma DSL bem projetada pode ser entendível por pessoas do negocio, permitindo-lhes",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "por pessoas do negocio, permitindo-lhes compreender diretamente o código que implementa suas regras de negócios.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Então este é o gancho – pessoas do negócio escrevendo suas próprias regras?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Em geral eu não penso assim. É muito trabalhoso criar um ambiente que permita as pessoas do negocio escrever suas próprias regras. Você tem que fazer boas ferramentas de edição, depuração, testes e etc. Você tem a maioria dos benefícios das DSLs",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "e etc. Você tem a maioria dos benefícios das DSLs apenas permitindo que pessoas do negocio sejam capazes de ler as regras. Então eles podem revê-las para aperfeiçoa-las, falar sobre elas com os desenvolvedores e propor mudanças corretas da",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "os desenvolvedores e propor mudanças corretas da implementação. Ter DSLs legíveis ao contexto negócios é de longe menos esforço do que ter DSLs escrevíveis pelas pessoas do negócios, mas os ganhos ainda são bons. Existem momentos onde vale a pena o",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "são bons. Existem momentos onde vale a pena o esforço para fazer DSLs escrevíveis por pessoas do negocio, mas esse é um objetivo mais avançado.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Você precisa de ferramentas especiais (leia-se caras)?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Normalmente, não. DSLs internas são apenas facilidades da linguagem de programação que você está usando. DSLs externas requerem que você use algumas ferramentas especiais – mas essas são open source e muito maduras. O maior problema com essas",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "e muito maduras. O maior problema com essas ferramentas é que a maioria dos desenvolvedores não estão acostumados com elas e acreditam que elas são complicadas de usar mais do que elas realmente são (um problema exacerbado pela pobre documentação).",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "(um problema exacerbado pela pobre documentação). Todavia há exceções no horizonte. Existe uma classe de ferramentas que eu chamo LanguageWorkbench. Essas ferramentas permitem você definir DSLs mais facilmente e também provem sofisticados editores",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "facilmente e também provem sofisticados editores para elas. Ferramentas assim tornam mais viáveis a construção de DSL para os negócios.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Então isto é a repetição do sonho do desenvolvimento de software sem programação (ou programadores)?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Esta foi a intenção do COBOL e não penso que há alguma razão para que as DSLs tenham sucesso onde o COBOL (e tantas outras falharam). Eu penso que é importante que DSLs permitam pessoas do negocio e desenvolvedores colaborarem mais eficientemente",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "e desenvolvedores colaborarem mais eficientemente porque eles podem falar sobre um conjunto de regras que também são códigos executáveis.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Quando eu deveria considerar a hipótese de criar uma DSL?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Quando você está trabalhando num aspecto do sistema com ricas regras de negócios ou work-flows. Uma DSL bem escrita deveria permitir que os clientes entendessem as regras pelas quais o sistema funciona.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Isto não vai levar a uma cacofonia de linguagens que as pessoas acharam mais difíceis de aprender?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Nós já temos uma cacofonia de frameworks que os programadores tem que aprender. Isto é uma inevitável conseqüência de sistemas reusáveis, é o único jeito que temos de lhe dar com todas essas coisas que os sistemas tem que fazer hoje em dia. Na",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "que os sistemas tem que fazer hoje em dia. Na essência uma DSL não é nada mais do que uma fachada chique sobre um framework. Como resultado elas contribuem um pouquinho com a complexidade que já havia. Na verdade uma boa DSL deveria fazer as coisas",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Na verdade uma boa DSL deveria fazer as coisas melhores tornando esses frameworks mais fáceis de usar.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "**Mas as pessoas não vão criar muitas DSLs de baixa qualidade?**",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Claro, assim como pessoas criam frameworks de baixa qualidade. Mas, novamente, eu gostaria de argumentar que DSLs de baixa qualidade não causam mais danos se comparados aos que os frameworks mal projetados causam",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Fonte: [DSL Interna e externa perguntas e respostas](http://archsofty.blogspot.com/2008/10/dsl-interna-e-externa-perguntas-e.html)  \nOriginal: [DSL Questions & Answers](http://www.martinfowler.com/bliki/DslQandA.html)  \nMais informações:",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Mais informações:  \n[Domain Specific Languages](http://www.grails-exchange.com/files/Guilliaume%20LaForge%20-%20DomainSpecificLanguages.pdf)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "[Arquitetura evolucionária e design emergente: Interfaces fluentes](http://www.ibm.com/developerworks/br/java/library/j-eaed14/index.html)  \n[Groovy SQL Builder](http://ilyasterin.com/blog/2009/07/groovy-sql-builder.html)",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "[Refatorando para Fluent-Interface](http://gc.blog.br/2007/09/25/refatorando-para-fluent-interface/)  \n## FAQ  \nEsta sessão será utilizada para responder perguntas freqüentes.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Por quê não utilizar uma linguagem baseada em SQL assim como o Tributos?  \n```bfc-script\nnumeros = [1,2,3]\npercorrer(de:1, ate:3, itens: numeros){\nimprimir item\n}\n// Irá imprimir os números 1, 2 e 3\n```68  \n### Por quê a API padrão não fornece métodos para consultar uma tabela no banco de dados?",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": true
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Como a intenção é que a codificação de scripts seja simples e intuitiva e aberta à pessoas que não possuem conhecimentos em linguagens de programação, deixar essa possibilidade aberta para esses usuários, pode acarretar em consultas pouco",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "esses usuários, pode acarretar em consultas pouco otimizadas, prejudicando todos os usuários de um banco de dados, levando até mesmo a indisponibilidade de toda a aplicação.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "### Por que não devo passar objetos que possuem responsabilidade internas em uma aplicação como parâmetros em scripts?",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "O bfc-script permite que sejam fornecidos parâmetros que serão utilizados pelo usuário dentro do script. Por exemplo, posso criar um script no qual o salário líquido será passado por parâmetro, ou ainda um objeto que represente um funcionário, onde",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "um objeto que represente um funcionário, onde o usuário terá acesso a nome, sexo e o salário líquido.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Quando você passa por parâmetro um objeto, alterações na classe do objeto impactam diretamente os scripts que o utilizam. Existe uma dependência forte entre a classe que representa o objeto e os scripts. Não é prudente fornecer um objeto que possui",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "Não é prudente fornecer um objeto que possui responsabilidades internas em sua aplicação, como por exemplo VOs.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "VOs constituem o modelo da aplicação e estão suscetíveis a mudanças extremas. Medir o impacto da alteração de um VO por si só já é altamente complexo, se estes VOs forem utilizados em scripts, pode inviabilizar a alteração do modelo e prejudicar a",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "inviabilizar a alteração do modelo e prejudicar a evolução do sistema.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    },
    {
        "document": "bfc_script_docs",
        "section": "Geral",
        "subsection": "",
        "subsubsection": "",
        "content": "* * *\nCopyright © 2021. All rights reserved.",
        "metadata": {
            "source": "./bfc_script_docs.md"
        },
        "contains_code": false
    }
]